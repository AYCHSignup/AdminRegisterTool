/*******************************************************************************
 * Educational Online Test Delivery System Copyright (c) 2015 American
 * Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0 See accompanying
 * file AIR-License-1_0.txt or at http://www.smarterapp.org/documents/
 * American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.AccValidator.Data;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class MasterResourceAccommodation implements Serializable
{
  private static final long         serialVersionUID = 6724376115476476492L;

  private String                    id;

  private String                    code;

  private int                       order;

  private boolean                   disabled;

  private String                    defaultSelection;

  private List<AccommodationText>   header;

  private String                    resourceType;

  private List<AccommodationOption> options          = new ArrayList<AccommodationOption> ();

  public String getId () {
    return id;
  }

  public void setId (String id) {
    this.id = id;
  }

  public String getCode () {
    return code;
  }

  public void setCode (String code) {
    this.code = code;
  }

  public int getOrder () {
    return order;
  }

  public void setOrder (int order) {
    this.order = order;
  }

  public boolean isDisabled () {
    return disabled;
  }

  public void setDisabled (boolean disabled) {
    this.disabled = disabled;
  }

  public String getDefaultSelection () {
    return defaultSelection;
  }

  public void setDefaultSelection (String defaultSelection) {
    this.defaultSelection = defaultSelection;
  }

  public List<AccommodationText> getHeader () {
    return header;
  }

  public void setHeader (List<AccommodationText> header) {
    this.header = header;
  }

  public String getResourceType () {
    /*
     * if (isNotEmpty(this.resourceType)) { return
     * AccommodationResourceType.valueOf(this.resourceType); } throw new
     * IllegalArgumentException("Invalid resourceType");
     */
    return this.resourceType;
  }

  public void setResourceType (final String resourceType) {
    /*
     * if (isNotEmpty(resourceType)) { this.resourceType =
     * Character.toTitleCase(resourceType.charAt(0)) +
     * resourceType.substring(1).toLowerCase(); } else {
     */

    this.resourceType = resourceType;
    // }
  }

  public List<AccommodationOption> getOptions () {
    return options;
  }

  public void setOptions (List<AccommodationOption> options) {
    this.options = options;
  }

  @Override
  public String toString () {
    return "MasterResourceAccommodation [id=" + id + ", code=" + code + ", order=" + order + ", disabled=" + disabled
        + ", defaultSelection=" + defaultSelection + ", header=" + header + ", resourceType=" + resourceType
        + ", options=" + options + "]";
  }

}
