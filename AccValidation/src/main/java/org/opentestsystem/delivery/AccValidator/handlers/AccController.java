/*******************************************************************************
 * Educational Online Test Delivery System Copyright (c) 2015 American
 * Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0 See accompanying
 * file AIR-License-1_0.txt or at http://www.smarterapp.org/documents/
 * American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.AccValidator.handlers;

import org.opentestsystem.delivery.AccValidator.Exception.StoringException;
import org.opentestsystem.delivery.AccValidator.Exception.ValidationException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 * @author mskhan
 * 
 */
public class AccController
{

  private static final Logger _logger  = LoggerFactory.getLogger (AccController.class);
  static ApplicationContext   _context = new ClassPathXmlApplicationContext (new String[] { "root-context.xml" });

  /**
   * @param args
   */
  public static void main (String[] args) {
    ValidationHandler validator = (ValidationHandler) _context.getBean ("validationHandler");
    validator.setDBInfo (validator._mongoHostName, validator._mongoPort, validator._mongoUserName, validator._mongoPassword, validator._mongoDatabaseName);
    _logger.info ("<<<<<<<<<<<<<<<<<<<<<<<<<<<< Starting Validation... >>>>>>>>>>>>>>>>>>>>>>>>>");
    _logger.info ("Starting ....." + validator._filePath + " : " + validator._xsdPath);
    String xml = validator._filePath;
    String xsd = validator._xsdPath;
    if (xml == null && args.length >= 2)
    {
      xml = args[0];
      xsd = args[1];
    }
    try {
      if (xml == null)
        throw new ValidationException ("failed", "XML File Path not specified.");
      if (xsd == null)
        throw new ValidationException ("failed", "XSD File Path not specified.");

      validator.validateXmlAccs (xml, xsd);
      _logger.info ("<<<<<<<<<<<<<<<<<<<<<<<<<<<< End Validation : No Validation error found >>>>>>>>>>>>>>>>>>>>>>>>>");
    } catch (ValidationException e) {
      _logger.info ("<<<<<<<<<<<<<<<<<<<<<<<<<<<< End Validation : Validation error found >>>>>>>>>>>>>>>>>>>>>>>>>");
      _logger.info (e.getMessage ());
      System.out.println ("\n" + e.getMessage () + "\n");
      return;
    } catch (Throwable t) {
      _logger.info ("<<<<<<<<<<<<<<<<<<<<<<<<<<<< End Validation : Validation error found >>>>>>>>>>>>>>>>>>>>>>>>>");
      _logger.error ("Validation Error::: " + t.getMessage ());
      return;
    }

    try {
      validator.storeMasterResourceAccommodationIntoDB (validator._masterResourceAccommodations);
      validator.storeResourceFamiliesIntoDB (validator._resourceFamilies);
      _logger.info ("Accommodation stored in database successfully.");
    } catch (StoringException e)
    {
      _logger.error (e.getMessage ());
    } catch (Throwable t)
    {
      _logger.error (t.getMessage ());
    }
  }

}
