/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testadmin.rest;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.notNullValue;
import static org.junit.Assert.assertThat;

import java.util.Map;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.delivery.testadmin.domain.AccessibilityEquipment;
import org.opentestsystem.delivery.testadmin.domain.AccessibilityEquipment.EquipmentType;
import org.opentestsystem.delivery.testreg.integration.AbstractRestEmbeddedMongoTest;

import com.google.common.collect.Maps;

public class AccessibilityEquipmentControllerTest extends AbstractRestEmbeddedMongoTest {

    private Map<String, Object> params;

    @Before
    public void buildParams() {

        params = Maps.newHashMap();
        params.put("name", "WindowsComputer");
        params.put("category", "Reading");
        params.put("type", EquipmentType.SOFTWARE);

    }

    @Test
    public void saveAccessibilityEquipment() throws InterruptedException {
        AccessibilityEquipment savedAccessibilityEquipment = callPOSTRestService("/accessibilityEquipment", params,
                AccessibilityEquipment.class);
        assertThat("saved updatedEntity", savedAccessibilityEquipment, notNullValue());

    }

    @Test
    public void updateAccessibilityEquipment() throws InterruptedException {
        AccessibilityEquipment savedAccessibilityEquipment = callPOSTRestService("/accessibilityEquipment", params,
                AccessibilityEquipment.class);
        params.put("id", savedAccessibilityEquipment.getId());
        params.put("name", "LinuxDeskTop");
        AccessibilityEquipment updatedEntity = callPUTRestService("/accessibilityEquipment/"
                + savedAccessibilityEquipment.getId(), params, AccessibilityEquipment.class);
        assertThat("updated updatedEntity", updatedEntity, notNullValue());
        assertThat("updated updatedEntity", updatedEntity.getName(), equalTo("LinuxDeskTop"));
    }

    @Test
    public void getAccessibilityEquipment() throws InterruptedException {
        AccessibilityEquipment savedAccessibilityEquipment = callPOSTRestService("/accessibilityEquipment", params,
                AccessibilityEquipment.class);
        AccessibilityEquipment fetchedAccessibilityEquipment = callGETRestService("/accessibilityEquipment/"
                + savedAccessibilityEquipment.getId(), AccessibilityEquipment.class);
        assertThat("fetched AccessibilityEquipment", fetchedAccessibilityEquipment, notNullValue());
        assertThat("fetched AccessibilityEquipment", fetchedAccessibilityEquipment.getId(),
                equalTo(savedAccessibilityEquipment.getId()));
    }
}
