package org.opentestsystem.delivery.testreg.rest;

import org.opentestsystem.delivery.testreg.domain.FormatType;
import org.opentestsystem.delivery.testreg.domain.Sb11Entity;
import org.opentestsystem.delivery.testreg.service.Sb11EntityLocatorService;
import org.opentestsystem.delivery.testreg.service.Sb11EntityRepositoryService;
import org.opentestsystem.delivery.testreg.service.TestRegPersister;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.ui.Model;

import javax.annotation.PostConstruct;
import javax.servlet.http.HttpServletRequest;
import java.util.List;

/*******************************************************************************
 * Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
@Component
public class Sb11EntityControllerHelper {

    private static final String FORMAT_TYPE = "FORMAT_TYPE";
    private static final String DATA_LIST = "DATA_LIST";

    private static Sb11EntityLocatorService locatorService;

    public Sb11EntityControllerHelper() {}

    @Autowired
    public Sb11EntityControllerHelper(Sb11EntityLocatorService entityLocatorService) {
        locatorService = entityLocatorService;
    }

    // The logic in this method that required a TestRegPersister has been relocated to Sb11LocatorService
    public static List<Sb11Entity> findEntities(final HttpServletRequest request, final Model model,
            final FormatType formatType, final TestRegPersister testRegPersister) throws Exception {
        List<Sb11Entity> entityList = locatorService.findEntities(request.getParameterMap(), formatType);
        if (model != null) {
            model.addAttribute(FORMAT_TYPE, formatType.toString());
            model.addAttribute(DATA_LIST, entityList);
        }
        return entityList;
    }

    // returns a distinct list of all parent entities from the search results above
    @SuppressWarnings("unchecked")
    // The logic in this method that required a TestRegPersister and
    // Sb11EntityRepositoryService has been relocated to Sb11LocatorService
    public static List<Sb11Entity> findParentEntities(final HttpServletRequest request, final Model model,
            final FormatType formatType, final TestRegPersister testRegPersister,
            final Sb11EntityRepositoryService entityService) throws Exception {
        List<Sb11Entity> parentEntities = locatorService.findParentEntities(request.getParameterMap(), formatType);
        if (model != null) {
            model.addAttribute(DATA_LIST, parentEntities);
        }
        return parentEntities;
    }
}
