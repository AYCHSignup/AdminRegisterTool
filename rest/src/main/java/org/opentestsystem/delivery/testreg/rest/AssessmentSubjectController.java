/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.rest;

import org.opentestsystem.delivery.testreg.domain.Assessment;
import org.opentestsystem.delivery.testreg.service.EligibilityService;
import org.opentestsystem.shared.web.AbstractRestController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.security.access.annotation.Secured;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Controller
public class AssessmentSubjectController extends AbstractRestController {

    @Autowired
    private EligibilityService eligibilityService;

    @RequestMapping(value = "/assessmentSubject", method = RequestMethod.GET, produces = { MediaType.APPLICATION_JSON_VALUE })
    @Secured({ "ROLE_Assessment Read" })
    @ResponseBody
    public Set<String> getEligibleSubjects(@RequestParam("studentId") String studentId, @RequestParam("stateAbbreviation") String stateAbbreviation) {
        /*
         * Get all the Subjects of all eligible assessments that this student has.
         */
        List<Assessment> eligibleAssessments = eligibilityService.findEligibleAssessmentsByStudentIdAndState(studentId, stateAbbreviation);
        Set<String> eligibleSubjects = new HashSet<>(); // Filter out duplicate Subjects if any
        for (Assessment assessment : eligibleAssessments) {
            eligibleSubjects.add(assessment.getSubjectCode());
        }
        return eligibleSubjects;
    }
}
