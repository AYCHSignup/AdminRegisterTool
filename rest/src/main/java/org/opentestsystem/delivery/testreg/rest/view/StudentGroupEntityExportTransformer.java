/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.rest.view;

import static org.opentestsystem.delivery.testreg.domain.FormatType.STUDENTGROUP;

import org.opentestsystem.delivery.testreg.domain.HierarchyLevel;
import org.opentestsystem.delivery.testreg.domain.StudentGroup;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class StudentGroupEntityExportTransformer implements Transformer<StudentGroup, String[]> {
    
    private static final String NAME_OF_INSTITUTION = "Name of Institution";
    
    private static final String ORGANIZATION_NAME = "Organization Name";

    @Autowired
    private EntityNameFinder entityNameFinder;
    
    @Override
    public String[] transform(StudentGroup studentGroup) {       
        String[] columnData = studentGroup.toStringArray();       
        populateInstitutionName(studentGroup, columnData);
        populateOrganizationName(studentGroup, columnData);
        return columnData;
    }
        
    private void populateInstitutionName(StudentGroup studentGroup, String[] columnData) {
        int nameOfInstitutionIndex = entityNameFinder.findEntityNameIndex(STUDENTGROUP, NAME_OF_INSTITUTION);
        if(nameOfInstitutionIndex > -1) {
            columnData[nameOfInstitutionIndex] = entityNameFinder.getEntityName(studentGroup.getInstitutionEntityMongoId(), HierarchyLevel.INSTITUTION);
        }
    }
    
    private void populateOrganizationName(StudentGroup studentGroup, String[] columnData) {
        int organizationNameIndex = entityNameFinder.findEntityNameIndex(STUDENTGROUP, ORGANIZATION_NAME);
        if(organizationNameIndex > -1) {
            if(studentGroup.getDistrictEntityMongoId() !=null) {
                columnData[organizationNameIndex] = entityNameFinder.getEntityName(studentGroup.getDistrictEntityMongoId(), HierarchyLevel.DISTRICT);
            } else {
                columnData[organizationNameIndex] = "";
            }
        }
    }

}
