/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2016 Regents of the University of California
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 *
 * SmarterApp Open Source Assessment Software Project: http://smarterapp.org
 * Developed by Fairway Technologies, Inc. (http://fairwaytech.com)
 * for the Smarter Balanced Assessment Consortium (http://smarterbalanced.org)
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.rest.external.mappers;

import org.opentestsystem.delivery.testreg.domain.User;
import org.opentestsystem.delivery.testreg.rest.external.models.UserDto;
import org.opentestsystem.delivery.testreg.rest.external.models.UserRoleDto;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by fairway on 8/23/16.
 */
public class UserMapper {

    public static UserDto mapFrom(User user) {
        UserDto userDto = new UserDto();
        userDto.setFirstName(user.getFirstName());
        userDto.setLastName(user.getLastName());
        userDto.setEmail(user.getEmail());
        if(user.getPhone() != null) {
            userDto.setPhoneNumber(user.getPhone());
        }
        userDto.setRoleAssociations(UserMapper.mapFrom(user.getRoleAssociations()));
        return userDto;
    }

    public static UserRoleDto mapFrom(User.RoleAssociation roleAssociation) {
        UserRoleDto userRoleDto = new UserRoleDto();
        userRoleDto.setEntityId(roleAssociation.getAssociatedEntityId());
        userRoleDto.setLevel(roleAssociation.getLevel().name());
        userRoleDto.setRole(roleAssociation.getRole());
        return userRoleDto;
    }

    public static List<UserRoleDto> mapFrom(List<User.RoleAssociation> roleAssociations) {
        List<UserRoleDto> userRoleDtos = new ArrayList<>();
        for (User.RoleAssociation roleAssociation : roleAssociations) {
            userRoleDtos.add(UserMapper.mapFrom(roleAssociation));
        }
        return userRoleDtos;
    }

}
