package org.opentestsystem.delivery.testreg.rest.external.mappers;

import org.opentestsystem.delivery.testreg.domain.Student;
import org.opentestsystem.delivery.testreg.domain.amqp.BatchStudent;
import org.opentestsystem.delivery.testreg.domain.amqp.BatchStudentDelete;
import org.opentestsystem.delivery.testreg.rest.external.models.StudentBatchDto;
import org.opentestsystem.delivery.testreg.rest.external.models.StudentDeleteBatchDto;
import org.opentestsystem.delivery.testreg.rest.external.models.StudentDto;

import java.text.SimpleDateFormat;

/**
 * Created by fairway on 6/17/16.
 */
public class StudentMapper {

    public static StudentDto mapFrom(Student student) {
        StudentDto studentDto = new StudentDto();
        studentDto.setStateAbbreviation(student.getStateAbbreviation());
        studentDto.setDistrictIdentifier(student.getDistrictIdentifier());
        studentDto.setInstitutionIdentifier(student.getInstitutionIdentifier());
        studentDto.setSsid(student.getEntityId());
        studentDto.setFirstName(student.getFirstName());
        studentDto.setMiddleName(student.getMiddleName());
        studentDto.setLastName(student.getLastName());
        studentDto.setBirthDate(student.getBirthDate().toDate());
        studentDto.setExternalSsid(student.getExternalSsid());
        studentDto.setSex(student.getGender().toString());
        studentDto.setHispanicOrLatino(student.getHispanicOrLatino() == "YES" || student.getHispanicOrLatino() == "0");
        studentDto.setAmericanIndianOrAlaskaNative(student.getAmericanIndianOrAlaskaNative() == "YES" || student.getAmericanIndianOrAlaskaNative() == "0");
        studentDto.setAsian(student.getAsian() == "YES" || student.getAsian() == "0");
        studentDto.setBlackOrAfricanAmerican(student.getBlackOrAfricanAmerican() == "YES" || student.getBlackOrAfricanAmerican() == "0");
        studentDto.setWhite(student.getWhite() == "YES" || student.getWhite() == "0");
        studentDto.setNativeHawaiianOrPacificIsland(student.getNativeHawaiianOrPacificIsland() == "YES" || student.getNativeHawaiianOrPacificIsland() == "0");
        studentDto.setTwoOrMoreRaces(student.getTwoOrMoreRaces() == "YES" || student.getTwoOrMoreRaces() == "0");
        studentDto.setGradeLevelWhenAssessed(student.getGradeLevelWhenAssessed().toString());
        studentDto.setLanguageCode(student.getLanguageCode());
        studentDto.setFirstEntryDateIntoUsSchool(student.getFirstEntryDateIntoUsSchool() == null ? null : student.getFirstEntryDateIntoUsSchool().toDate());
        studentDto.setLepEntryDate(student.getLepEntryDate() == null ? null : student.getLepEntryDate().toDate());
        studentDto.setLepExitDate(student.getLepExitDate() == null ? null : student.getLepExitDate().toDate());
        studentDto.setTitle3ProgramType(student.getTitle3ProgramType() == null ? null : student.getTitle3ProgramType().toString());
        studentDto.setPrimaryDisabilityType(student.getPrimaryDisabilityType() == null ? null : student.getPrimaryDisabilityType().toString());
        studentDto.setiDEAIndicator(student.getiDEAIndicator() == "YES" || student.getiDEAIndicator() == "0");
        studentDto.setSection504Status(student.getSection504Status() == "YES" || student.getSection504Status() == "0");
        studentDto.setLepStatus(student.getLepStatus() == "YES" || student.getLepStatus() == "0");
        studentDto.setElpLevel(Integer.parseInt(student.getTitle3ProgressStatus()));
        studentDto.setDisadvantageStatus(student.getDisadvantageStatus() == "YES" || student.getDisadvantageStatus() == "0");
        studentDto.setMigrantStatus(student.getMigrantStatus() == "YES" || student.getMigrantStatus() == "0");
        return studentDto;
    }
    
    public static Student mapTo(StudentDto studentDto) {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        Student student = new Student();
        student.setStateAbbreviation(studentDto.getStateAbbreviation());
        student.setDistrictIdentifier(studentDto.getDistrictIdentifier());
        student.setInstitutionIdentifier(studentDto.getInstitutionIdentifier());
        student.setEntityId(studentDto.getSsid());
        student.setFirstName(studentDto.getFirstName());
        student.setMiddleName(studentDto.getMiddleName());
        student.setLastName(studentDto.getLastName());
        student.setBirthDate(formatter.format(studentDto.getBirthDate()));
        student.setExternalSsid(studentDto.getExternalSsid());
        student.setGender(studentDto.getSex().toString());
        student.setHispanicOrLatino(studentDto.isHispanicOrLatino() ? "YES" : "NO");
        student.setAmericanIndianOrAlaskaNative(studentDto.isAmericanIndianOrAlaskaNative() ? "YES" : "NO");
        student.setAsian(studentDto.isAsian() ? "YES" : "NO");
        student.setBlackOrAfricanAmerican(studentDto.isBlackOrAfricanAmerican() ? "YES" : "NO");
        student.setWhite(studentDto.isWhite() ? "YES" : "NO");
        student.setNativeHawaiianOrPacificIsland(studentDto.isNativeHawaiianOrPacificIsland() ? "YES" : "NO");
        student.setTwoOrMoreRaces(studentDto.isTwoOrMoreRaces() ? "YES" : "NO");
        student.setGradeLevelWhenAssessed(studentDto.getGradeLevelWhenAssessed().toString());
        student.setLanguageCode(studentDto.getLanguageCode());
        student.setFirstEntryDateIntoUsSchool(studentDto.getFirstEntryDateIntoUsSchool() == null ? null : formatter.format(studentDto.getFirstEntryDateIntoUsSchool()));
        student.setLepEntryDate(studentDto.getLepEntryDate() == null ? null : formatter.format(studentDto.getLepEntryDate()));
        student.setLepExitDate(studentDto.getLepExitDate() == null ? null : formatter.format(studentDto.getLepExitDate()));
        student.setTitle3ProgramType(studentDto.getTitle3ProgramType() == null ? null : studentDto.getTitle3ProgramType().toString());
        student.setPrimaryDisabilityType(studentDto.getPrimaryDisabilityType() == null ? null : studentDto.getPrimaryDisabilityType().toString());
        student.setiDEAIndicator(studentDto.isiDEAIndicator() ? "YES" : "NO");
        student.setSection504Status(studentDto.isSection504Status() ? "YES" : "NO");
        student.setLepStatus(studentDto.isLepStatus() ? "YES" : "NO");
        student.setTitle3ProgressStatus(String.valueOf(studentDto.getElpLevel()));
        student.setDisadvantageStatus(studentDto.isDisadvantageStatus() ? "YES" : "NO");
        student.setMigrantStatus(studentDto.isMigrantStatus() ? "YES" : "NO");
        return student;
    }

    public static BatchStudent MapTo(StudentBatchDto studentBatchDto) {
        BatchStudent batchStudent = new BatchStudent();
        batchStudent.setStudent(StudentMapper.mapTo(studentBatchDto));
        batchStudent.setBatchId(studentBatchDto.getBatchId());
        return batchStudent;
    }

    public static BatchStudent MapTo(StudentDeleteBatchDto studentDeleteBatchDto) {
        BatchStudent batchStudent = new BatchStudent();
        BatchStudentDelete batchStudentDelete = new BatchStudentDelete();
        batchStudentDelete.setSsid(studentDeleteBatchDto.getSsid());
        batchStudentDelete.setStateCode(studentDeleteBatchDto.getStateCode());
        batchStudent.setBatchStudentDelete(batchStudentDelete);
        batchStudent.setBatchId(studentDeleteBatchDto.getBatchId());
        return batchStudent;
    }
}
