/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testadmin.rest;

import java.util.Collection;
import java.util.Map;

import org.opentestsystem.delivery.testadmin.domain.TestAdminReport;
import org.opentestsystem.delivery.testadmin.service.ParticipationDetailReportService;
import org.opentestsystem.delivery.testreg.domain.Assessment;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class ParticipationDetailReportController extends TestAdminReportController {

    @Autowired
    ParticipationDetailReportService detailReportService;

    @RequestMapping(value = "participationDetailReport", method = RequestMethod.GET)
    public void createParticipationDetailReport(@RequestParam("tenantId") final String tenantId, @RequestParam("tenantType") final String tenantType,
            @RequestParam("entityType") final String entityType, @RequestParam("entityId") final String entityId, @RequestParam("testStatus") final String testStatus,
            @RequestParam("assessmentId") final String assessmentId, @RequestParam("opportunity") final int opportunity, Model model) {

        Map<String, Assessment> testNames = getTenantAssessment(tenantId, tenantType, assessmentId);
        Assessment testName = null;

        if (assessmentId == null || assessmentId.isEmpty()) {
            testName = testNames.get(assessmentId);
        }
        Collection<TestAdminReport> summaryList = detailReportService.buildPartipationReport(entityId, testNames, testStatus, opportunity);
        model.addAttribute(REPORT_TYPE, "PARTICIPATION_DETAIL_REPORT");
        model.addAttribute(DATA_LIST, summaryList);
        model.addAttribute(HEADER_MESSAGE, buildHeaderMessage(DETAIL_REPORT_HEADER, tenantId, entityId, entityType, testName, entityType));

    }

}
