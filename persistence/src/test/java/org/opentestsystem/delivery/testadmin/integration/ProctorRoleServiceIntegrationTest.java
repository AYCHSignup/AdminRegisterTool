/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.integration;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.junit.Assert.assertThat;

import java.util.List;

import org.joda.time.DateTime;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.delivery.testadmin.domain.Affinity;
import org.opentestsystem.delivery.testadmin.domain.Proctor;
import org.opentestsystem.delivery.testadmin.domain.ProctorRole;
import org.opentestsystem.delivery.testadmin.domain.TimeSlot;
import org.opentestsystem.delivery.testadmin.service.ProctorRoleService;
import org.opentestsystem.delivery.testreg.domain.Assessment.AssessmentType;
import org.opentestsystem.delivery.testreg.domain.User;
import org.opentestsystem.delivery.testreg.domain.User.RoleAssociation;
import org.opentestsystem.delivery.testreg.integration.AbstractPersistenceEmbeddedTest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;

import com.google.common.collect.Lists;

public class ProctorRoleServiceIntegrationTest extends AbstractPersistenceEmbeddedTest {

    Proctor proctor;

    @Autowired
    private ProctorRoleService proctorRoleService;

    @Autowired
    private MongoTemplate mongoTemplate;

    @Before
    public void setup() {

        // create and save a User
        User user = new User();
        user.setEmail("test@test.com");
        user.setFirstName("Test");
        user.setLastName("User");

        RoleAssociation roleAssoc = new RoleAssociation();
        roleAssoc.setRole("School Coordinator");
        roleAssoc.setLevel("INSTITUTION");
        roleAssoc.setAssociatedEntityId("1");
        roleAssoc.setStateAbbreviation("WI");

        user.setRoleAssociations(Lists.newArrayList(roleAssoc));

        mongoTemplate.save(user);

    }

    @Test
    public void testSave() {

        List<Proctor> proctorsSaved = mongoTemplate.findAll(Proctor.class);
        assertThat(proctorsSaved, hasSize(0));

        ProctorRole proctorRole = new ProctorRole();
        proctorRole.setName("School Coordinator");
        proctorRole.setAssessmentTypes(new AssessmentType[] { AssessmentType.SUMMATIVE, AssessmentType.FORMATIVE,
                AssessmentType.INTERIM });

        proctorRoleService.saveProctorRole(proctorRole);

        proctorsSaved = mongoTemplate.findAll(Proctor.class);
        assertThat(proctorsSaved, hasSize(1));

        TimeSlot ts = new TimeSlot(new DateTime(2014, 9, 10, 0, 0), new DateTime(2014, 9, 15, 23, 59),
                (Affinity[]) null);

        assertThat(proctorsSaved.get(0).isAvailableForTimeSlot(ts), is(true));
    }
}
