/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.integration;

import static org.hamcrest.CoreMatchers.notNullValue;
import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertThat;
import static org.opentestsystem.delivery.testadmin.integration.FacilityAvailabilityTestData.TEST_FACILITY_ID;
import static org.opentestsystem.delivery.testadmin.integration.FacilityAvailabilityTestData.TEST_INSTITUTION_ID;

import org.joda.time.DateTime;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.delivery.testadmin.domain.FacilityAvailability;
import org.opentestsystem.delivery.testadmin.persistence.FacilityAvailabilityRepository;
import org.opentestsystem.delivery.testreg.integration.AbstractPersistenceEmbeddedTest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;

public class FacilityAvailabilityRepositoryCustomTest extends AbstractPersistenceEmbeddedTest  {
    
    @Autowired
    private FacilityAvailabilityRepository facilityAvailabilityRepository;
    
    @Autowired
    MongoTemplate mongoTemplate;
    
    FacilityAvailabilityTestData facilityAvailabilityTestData = new FacilityAvailabilityTestData();
    
    @Before
    public void setup() {
        mongoTemplate.insert(facilityAvailabilityTestData.createFacilityAvailability());
    }
    
    
    @Test
    public void getFacilityAvailability() {
        DateTime today = DateTime.now();
        
        //TimeSlot for checking. TestData is setup for a timeslot window till 2199 so year does not matter
        //TimeSlot to check is 08:15 AM to 09.30 AM       
        
        FacilityAvailability facilityAvailability      = facilityAvailabilityRepository.findByFacilityIdAndInstitutionIdentifierAndTimeSlot(TEST_FACILITY_ID, TEST_INSTITUTION_ID, today, facilityAvailabilityTestData.testTimeSlotId1);
        assertThat(facilityAvailability, is(notNullValue()));
        assertThat(facilityAvailability.getFacilityTimes(), hasSize(1));
        assertThat(facilityAvailability.getFacilityTimes().get(0).getTimeSlot(), is(notNullValue()));
        assertThat(facilityAvailability.getFacilityTimes().get(0).getSeatConfigurations(), hasSize(2));
        
        facilityAvailability      = facilityAvailabilityRepository.findByFacilityIdAndInstitutionIdentifierAndTimeSlot(TEST_FACILITY_ID, TEST_INSTITUTION_ID, today, facilityAvailabilityTestData.testTimeSlotId2);
        assertThat(facilityAvailability, is(notNullValue()));
        assertThat(facilityAvailability.getFacilityTimes(), hasSize(1));
        assertThat(facilityAvailability.getFacilityTimes().get(0).getTimeSlot(), is(notNullValue()));
        assertThat(facilityAvailability.getFacilityTimes().get(0).getSeatConfigurations(), hasSize(1));
    }
    

}
