/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.integration;

import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.junit.Assert.assertThat;
import static org.opentestsystem.delivery.testadmin.domain.Affinity.AffinityType.GRADE;
import static org.opentestsystem.delivery.testadmin.domain.Affinity.AffinityType.SUBJECT;
import static org.opentestsystem.delivery.testadmin.domain.Availability.NOTAVAILABLE;

import java.util.Arrays;
import java.util.List;

import org.joda.time.DateTime;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.delivery.testadmin.domain.Affinity;
import org.opentestsystem.delivery.testadmin.domain.Affinity.AffinityRule;
import org.opentestsystem.delivery.testadmin.domain.Proctor;
import org.opentestsystem.delivery.testadmin.domain.Proctor.AvailabilityWindow;
import org.opentestsystem.delivery.testadmin.service.ProctorService;
import org.opentestsystem.delivery.testreg.integration.AbstractPersistenceEmbeddedTest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;

import com.google.common.collect.Lists;

public class ProctorServiceIntegrationTest extends AbstractPersistenceEmbeddedTest {

    Proctor proctor;

    @Autowired
    ProctorService proctorService;

    @Autowired
    MongoTemplate mongoTemplate;

    @Before
    public void setup() {
        proctor = new Proctor();
        Affinity subject1 = new Affinity(AffinityRule.STRICT, "ELA", SUBJECT);
        Affinity subject2 = new Affinity(AffinityRule.STRICT, "MATH", SUBJECT);
        Affinity grade = new Affinity(AffinityRule.STRICT, "07", GRADE);
        proctor.setAffinities(Arrays.asList(new Affinity[]{subject1, subject2, grade}));
        
        AvailabilityWindow t1 = new AvailabilityWindow(new DateTime(2014, 12, 22, 11, 15), new DateTime(2014, 12, 22,
                12, 15), NOTAVAILABLE);
        proctor.setAvailabilityWindow(Lists.newArrayList(t1));
    }

    @Test
    public void testSave() {
        proctorService.saveProctor(proctor);

        List<Proctor> proctorsSaved = mongoTemplate.findAll(Proctor.class);
        assertThat(mongoTemplate.findAll(Proctor.class), hasSize(1));
        assertThat(proctorsSaved.get(0).getAffinities(), hasSize(3));
    }
}
