/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.persistence.criteria;

import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.hamcrest.collection.IsEmptyCollection.empty;
import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertThat;

import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.delivery.testreg.domain.Accommodation;
import org.opentestsystem.delivery.testreg.domain.Sb11NonEntity;
import org.opentestsystem.delivery.testreg.domain.Student;
import org.opentestsystem.delivery.testreg.persistence.Verifier;
import org.opentestsystem.delivery.testreg.persistence.criteria.verifiers.accommodation.AccommodationStudentVerifier;
import org.opentestsystem.delivery.testreg.service.Sb11NonEntityRepositoryService;
import org.opentestsystem.shared.search.domain.AbstractSearchRequest;
import org.springframework.test.util.ReflectionTestUtils;
import org.springframework.validation.ObjectError;

public class AccommodationPersistenceCriteriaTest {

    Verifier<Accommodation> verifier;

    @Before
    public void setup() {
        verifier = new AccommodationStudentVerifier();
    }

    @Test
    public void testValidAccommodation() {
        Student student = new Student();
        student.setEntityId("12345");
        student.setStateAbbreviation("MN");

        Accommodation accommodation = new Accommodation();
        accommodation.setStudentId(student.getEntityId());
        accommodation.setStateAbbreviation(student.getStateAbbreviation());

        ReflectionTestUtils.setField(verifier, "sb11NonEntityRepositoryService", new MockEntityRepositoryService(student));

        assertThat(verifier.verify(accommodation), is(empty()));
    }

    @Test
    public void testNoStudentFound() {
        Accommodation accommodation = new Accommodation();
        accommodation.setStudentId("2434");
        accommodation.setStateAbbreviation("MN");

        ReflectionTestUtils.setField(verifier, "sb11NonEntityRepositoryService", new MockEntityRepositoryService(null));

        List<? extends ObjectError> errors = verifier.verify(accommodation);
        assertThat(errors, hasSize(1));
        assertThat(errors.get(0).getDefaultMessage(), is("Student Identifier not found in the database"));
    }

    private class MockEntityRepositoryService implements Sb11NonEntityRepositoryService {

        Student student;

        public MockEntityRepositoryService(Student student) {
            this.student = student;
        }

        @SuppressWarnings("unchecked")
        @Override
        public <T extends Sb11NonEntity> T findByAlternateKey(AbstractSearchRequest searchRequest, Class<T> clazz) {
            return (T) student;
        }

    }

}
