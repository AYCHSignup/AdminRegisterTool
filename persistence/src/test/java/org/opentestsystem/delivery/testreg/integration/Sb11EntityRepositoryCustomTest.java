/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testreg.integration;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.opentestsystem.delivery.testreg.domain.Sb11Entity;
import org.opentestsystem.delivery.testreg.domain.StateEntity;
import org.opentestsystem.delivery.testreg.persistence.Sb11EntityRepository;
import org.opentestsystem.delivery.testreg.persistence.StateEntityRepository;
import org.springframework.beans.factory.annotation.Autowired;


public class Sb11EntityRepositoryCustomTest extends AbstractPersistenceEmbeddedTest  {

    @Autowired
    private Sb11EntityRepository<Sb11Entity> sb11EntityRepository;    
    
    @Autowired
    private StateEntityRepository stateEntityRepository;
    
    @Test
    public void testGetEntityByEntityId() {
        
        StateEntity entity = buildStateEntity();

        StateEntity savedEntity = stateEntityRepository.save(entity);
        assertNotNull("State Entity is not saved", savedEntity);
        assertNotNull("State entity id is null", savedEntity.getId());
        
        StateEntity foundEntity = (StateEntity)sb11EntityRepository.findByEntityId(savedEntity.getEntityId(), StateEntity.class);
        assertNotNull("State Entity is not saved", foundEntity);
        assertTrue("Id's does not match", savedEntity.getId().equals(foundEntity.getId()));
    }

    @Test
    public void testHasAssociatedEntities() {
        
        StateEntity entity = buildStateEntity();

        StateEntity savedEntity = stateEntityRepository.save(entity);
        assertNotNull("State Entity is not saved", savedEntity);
        assertNotNull("State entity id is null", savedEntity.getId());
        
        Long count = sb11EntityRepository.getEntityCountByParentEntityId(savedEntity.getParentEntityId(), StateEntity.class);
        assertTrue("associated entity does not exist", count  == 1);
    }
    private StateEntity buildStateEntity() {
        StateEntity.Builder stateEntityBuilder = new StateEntity.Builder(new Object[]{"WI", "WISCONSIN", "GROUPOFSTATES", "1", "ADD"});
        return stateEntityBuilder.build();
    }
    
}
