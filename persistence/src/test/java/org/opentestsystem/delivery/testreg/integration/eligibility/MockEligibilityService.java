/*
Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research

Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 */

package org.opentestsystem.delivery.testreg.integration.eligibility;

import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.joda.time.DateTime;
import org.opentestsystem.delivery.testreg.domain.Assessment;
import org.opentestsystem.delivery.testreg.domain.EligibleStudent;
import org.opentestsystem.delivery.testreg.domain.ExplicitEligibility;
import org.opentestsystem.delivery.testreg.domain.Student;
import org.opentestsystem.delivery.testreg.domain.search.EligibleStudentSearchRequest;
import org.opentestsystem.delivery.testreg.service.EligibilityService;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.stereotype.Component;

@Component
public class MockEligibilityService implements EligibilityService {

    public MockEligibilityService() {
    }

    @Override
    public List<Assessment> findEligibleAssessmentsByStudent(final String studentMongoId) {
        return null;
    }

    @Override
    public List<Assessment> findEligibleAssessmentsByTestWindow(final String studentMongoId, final String stateId) {
        return null;
    }

    @Override
    public void saveAssociation(final Assessment assess, final Student student) {
    }

    @Override
    public void saveAssociations(final Assessment assess, final List<Student> students) {
    }

    @Override
    public void removeAssociation(final Assessment assess, final Student student) {
    }

    @Override
    public void removeAssociations(final Assessment assess, final List<Student> student) {
    }

    @Override
    public void removeAllAssociationsForStudent(final Student student) {
    }

    @Override
    public void removeAllAssociationsForAssessment(final Assessment assess) {
    }

    @Override
    public List<Assessment> findEligibleAssessmentsByStudentIdAndState(final String studentId, final String state) {
        return null;
    }

    @Override
    public Set<Assessment> findAllAssessmentsByTenantsAndBeginWindow(final Collection<String> tenantsList, final DateTime date) {
        return null;
    }

    @Override
    public void removeEligibleStudentCollection() {
    }

    @Override
    public Map<ExplicitEligibility, DateTime> findAllEligibilityByStudentIdStateAbbreviationAndBeginWindow(final String studentId, final String stateAbbreviation, final DateTime date) {
        return null;
    }

    @Override
    public SearchResponse<EligibleStudent> findEligibleStudents(final EligibleStudentSearchRequest searchRequest) {
        return null;
    }

    @Override
    public SearchResponse<Student> findStudents(final EligibleStudentSearchRequest searchRequest) {
        return null;
    }
}
