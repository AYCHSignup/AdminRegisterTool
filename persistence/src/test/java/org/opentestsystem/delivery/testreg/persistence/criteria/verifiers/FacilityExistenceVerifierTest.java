/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.persistence.criteria.verifiers;

import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.hamcrest.collection.IsEmptyCollection.empty;
import static org.junit.Assert.assertThat;

import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.opentestsystem.delivery.testadmin.domain.Facility;
import org.opentestsystem.delivery.testadmin.service.FacilityService;
import org.opentestsystem.delivery.testreg.domain.InstitutionEntity;
import org.opentestsystem.delivery.testreg.domain.Sb11Entity;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.FieldError;

import com.google.common.collect.Lists;

public class FacilityExistenceVerifierTest {

    @Autowired
    @InjectMocks
    FacilityExistenceVerifier facilityExistenceService;
    
    @Mock
    FacilityService facilityService;
    
    @Before
    public void setup() {
        MockitoAnnotations.initMocks(this);
        
        List<Facility> facilitiesStub = Lists.newArrayList(new Facility());
        Mockito.when(facilityService.getFacilities("1")).thenReturn(facilitiesStub);
    }
    
    @Test
    public void testNoErrors() {
        Sb11Entity sb11Entity = new InstitutionEntity();
        List<FieldError> errors = facilityExistenceService.verify(sb11Entity);
        assertThat(errors, empty());
    }
    
    @Test
    public void testErrors() {
        Sb11Entity sb11Entity = new InstitutionEntity();
        sb11Entity.setId("1");
        List<FieldError> errors = facilityExistenceService.verify(sb11Entity);
        assertThat(errors, hasSize(1));
    }
}
