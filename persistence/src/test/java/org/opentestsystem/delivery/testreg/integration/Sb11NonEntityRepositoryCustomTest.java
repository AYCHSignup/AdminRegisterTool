/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testreg.integration;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.opentestsystem.delivery.testreg.domain.Sb11NonEntity;
import org.opentestsystem.delivery.testreg.domain.User;
import org.opentestsystem.delivery.testreg.persistence.Sb11NonEntityRepository;
import org.opentestsystem.delivery.testreg.persistence.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;


public class Sb11NonEntityRepositoryCustomTest extends AbstractPersistenceEmbeddedTest  {

    @Autowired
    private Sb11NonEntityRepository<Sb11NonEntity> sb11NonEntityRepository;    
    
    @Autowired
    private UserRepository userRepository;
    
    @Test
    public void testFindByAlternateKey() {
        
        User user = buildUser();
        User savedUser = userRepository.save(user);
        assertNotNull("User is not saved", savedUser);
        assertNotNull("State entity id is null", savedUser.getId());
        
        User foundUser = sb11NonEntityRepository.findByAlternateKey(user.createAlternateKeySearchRequest(), User.class);
        assertNotNull("User not found", foundUser);
        assertTrue("Id's does not match", savedUser.getId().equals(foundUser.getId()));
    }

    private User buildUser() {
        User.Builder userBuilder = new User.Builder(new Object[]{"Chandra", "Kanth", "adfasd@gmail.com", "345-345-2344", "Test Author", "000000", "CLIENT", "WI", "NO"});
        return userBuilder.build();
    }
    
}
