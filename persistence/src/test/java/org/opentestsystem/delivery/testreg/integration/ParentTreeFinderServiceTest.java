/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.integration;

import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.hamcrest.collection.IsMapContaining.hasEntry;
import static org.hamcrest.core.IsNull.notNullValue;
import static org.junit.Assert.assertThat;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.DISTRICT;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.GROUPOFDISTRICTS;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.GROUPOFINSTITUTIONS;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.GROUPOFSTATES;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.INSTITUTION;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.STATE;

import java.util.Map;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.delivery.CachedClientEntity;
import org.opentestsystem.delivery.testreg.domain.DistrictEntity;
import org.opentestsystem.delivery.testreg.domain.GroupOfDistrictsEntity;
import org.opentestsystem.delivery.testreg.domain.GroupOfInstitutionsEntity;
import org.opentestsystem.delivery.testreg.domain.GroupOfStatesEntity;
import org.opentestsystem.delivery.testreg.domain.HierarchyLevel;
import org.opentestsystem.delivery.testreg.domain.InstitutionEntity;
import org.opentestsystem.delivery.testreg.domain.StateEntity;
import org.opentestsystem.delivery.testreg.service.ParentTreeFinderService;
import org.opentestsystem.delivery.testreg.service.Sb11EntityRepositoryService;
import org.springframework.beans.factory.annotation.Autowired;

public class ParentTreeFinderServiceTest extends AbstractPersistenceEmbeddedTest {

    @Autowired
    ParentTreeFinderService parentTreeFinderService;
    
    @Autowired
    private Sb11EntityRepositoryService sb11EntityService;
    
    @Autowired
    private CachedClientEntity cachedClientEntity;
    
    @Before
    public void setup() {
        buildSb11EntityTree();
    }
    
    private void buildSb11EntityTree() {        
        mongoTemplate.insert(new GroupOfStatesEntity.Builder("GOS12345", "MIDWEST STATES", "CLIENT", "TestClientId", "ADD").build());
        mongoTemplate.insert(new StateEntity.Builder("WI", "WISCONSIN", "GROUPOFSTATES", "GOS12345", "ADD").build());
        mongoTemplate.insert(new GroupOfDistrictsEntity.Builder("GOD2345", "WI DISTRICT 1000", "STATE", "WI", "WI", "ADD").build());
        mongoTemplate.insert(new DistrictEntity.Builder("D43534", "WI Group Of Districts", "34534", "GROUPOFDISTRICTS", "GOD2345", "WI", "ADD").build());
        mongoTemplate.insert(new GroupOfInstitutionsEntity.Builder("GOI12345", "MIDWEST STATES", "DISTRICT", "D43534", "WI", "ADD").build());
        mongoTemplate.insert(new InstitutionEntity.Builder("10001", "MiddletonSchool", "GROUPOFINSTITUTIONS", "3423", "GOI12345", "WI", "ADD").build());        
    }
    
    @Test
    public void testParentTreeForInstitution() {
        InstitutionEntity institution = sb11EntityService.findByEntityIdAndStateAbbreviation("10001", "WI", InstitutionEntity.class);
        Map<HierarchyLevel, String> parentTreeMap = parentTreeFinderService.getParentTree(institution);
        
        assertThat(parentTreeMap, notNullValue());
        assertThat(parentTreeMap.keySet(), hasSize(6));
        assertThat(parentTreeMap, hasEntry(GROUPOFSTATES, "GOS12345"));
        assertThat(parentTreeMap, hasEntry(STATE, "WI"));
        assertThat(parentTreeMap, hasEntry(GROUPOFDISTRICTS, "GOD2345"));
        assertThat(parentTreeMap, hasEntry(DISTRICT, "D43534"));
        assertThat(parentTreeMap, hasEntry(GROUPOFINSTITUTIONS, "GOI12345"));
        assertThat(parentTreeMap, hasEntry(INSTITUTION, "10001"));       
    }
    
    
}
