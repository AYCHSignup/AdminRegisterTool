/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.persistence;

import java.util.List;

import org.bson.types.ObjectId;
import org.joda.time.DateTime;
import org.opentestsystem.delivery.testadmin.domain.schedule.Schedule;
import org.opentestsystem.delivery.testadmin.domain.schedule.ScheduledDay;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.core.query.Update;

public class ScheduleRepositoryImpl implements ScheduleRepositoryCustom {

    @Autowired
    private transient MongoOperations mongoOperations;

    @Override
    public Schedule findScheduleByFacilityAndStartDate(String institutionId, String facility, DateTime dateTime) {
        return mongoOperations.findOne(new Query(
                Criteria.where("institutionId").is(institutionId).andOperator(
                        Criteria.where("scheduledDays.day").is(dateTime).andOperator(
                                Criteria.where("scheduledDays.facilities.facilityName").is(facility)))), Schedule.class);
    }

    @Override
    public List<Schedule> findScheduleByStartDateAndEndDate(String institutionId, DateTime startDate, DateTime endDate) {
        return mongoOperations.find(new Query(
                Criteria.where("institutionId").is(institutionId).andOperator(Criteria.where("startDate").gte(startDate).lte(endDate))), Schedule.class);

    }
    
    @Override
    public Schedule updateScheduleDay(String scheduleId, ScheduledDay scheduledDay) {
        return mongoOperations.findAndModify(new Query(Criteria.where("_id").is(getObjectId(scheduleId))
                .andOperator(Criteria.where("scheduledDays.id").is(getObjectId(scheduledDay.getId())))), new Update().set("scheduledDays.$", scheduledDay), Schedule.class);
    }
       
    private ObjectId getObjectId(final String id) {
        return new ObjectId(id);
    }
}
