/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testadmin.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
import org.opentestsystem.delivery.testadmin.domain.Proctor;
import org.opentestsystem.delivery.testadmin.domain.ProctorScheduleReport;
import org.opentestsystem.delivery.testadmin.domain.TestAdminReport;
import org.opentestsystem.delivery.testadmin.domain.schedule.ScheduledDay;
import org.opentestsystem.delivery.testadmin.domain.schedule.ScheduledFacility;
import org.opentestsystem.delivery.testadmin.domain.schedule.ScheduledTimeSlot;
import org.springframework.stereotype.Service;

@Service("proctorScheduleReportService")
public class ProctorScheduleReportServiceImpl extends ScheduleReportServiceImpl {
    private static final DateTimeFormatter timeFormat = DateTimeFormat.forPattern("hh:mm a");

    @Override
    public List<TestAdminReport> populateScheduleReport(List<ScheduledDay> allScheduleDays, List<DateTime> rangeOfdates, String institutionId) {
        List<TestAdminReport> reportList = new ArrayList<TestAdminReport>();
        for (ScheduledDay sday : allScheduleDays) {
            if (rangeOfdates.contains(sday.getDay())) {
                for (ScheduledFacility facility : sday.getFacilities()) {
                    Set<ScheduledTimeSlot> schdulesTimeSlots = facility.getTimeSlots();
                    for (ScheduledTimeSlot timeSlot : schdulesTimeSlots) {
                        ProctorScheduleReport report = new ProctorScheduleReport();
                        Proctor proctor = timeSlot.getProctor();
                        if (proctor != null) {
                            if (proctor.getUser() != null) {
                                report.setFirstName(proctor.getUser().getFirstName());
                                report.setLastName(proctor.getUser().getLastName());
                                report.setEmailAddress(proctor.getUser().getEmail());
                            }
                            report.setScheduledDate(sday.getDay());
                            report.setTimeRange(timeFormat.print(timeSlot.getStartTime()) + " - " + timeFormat.print(timeSlot.getEndTime()));
                            report.setLocation(facility.getLocation());
                            reportList.add(report);
                        }
                    }
                }
            }
        }
        return reportList;
    }
}
