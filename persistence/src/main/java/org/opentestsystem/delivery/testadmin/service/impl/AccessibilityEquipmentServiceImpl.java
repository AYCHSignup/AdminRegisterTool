/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testadmin.service.impl;

import org.opentestsystem.delivery.testadmin.domain.AccessibilityEquipment;
import org.opentestsystem.delivery.testadmin.domain.search.AccessibilityEquipmentSearchRequest;
import org.opentestsystem.delivery.testadmin.persistence.AccessibilityEquipmentRepository;
import org.opentestsystem.delivery.testadmin.service.AccessibilityEquipmentService;
import org.opentestsystem.shared.exception.LocalizedException;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DuplicateKeyException;
import org.springframework.stereotype.Service;

@Service
public class AccessibilityEquipmentServiceImpl implements AccessibilityEquipmentService {

    @Autowired
    AccessibilityEquipmentRepository equipmentRepository;

    @Override
    public AccessibilityEquipment saveAccessibilityEquipment(AccessibilityEquipment equipment) {
        try {
            return equipmentRepository.save(equipment);
        } catch (DuplicateKeyException dke) {
            throw new LocalizedException("ae.already.exists", new String[] {equipment.getName()});
        }
    }

    @Override
    public AccessibilityEquipment getAccessibilityEquipment(String equipmentId) {
        return equipmentRepository.findOne(equipmentId);
    }

    @Override
    public void removeAccessibilityEquipment(String equipmentId) {
        equipmentRepository.delete(equipmentId);
        
    }

    @Override
    public SearchResponse<AccessibilityEquipment> searchAccessibilityEquipments(AccessibilityEquipmentSearchRequest searchRequest) {
        return equipmentRepository.search(searchRequest);
    }

}
