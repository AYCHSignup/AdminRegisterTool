/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.persistence;

import java.util.ArrayList;
import java.util.List;

import org.bson.types.ObjectId;
import org.opentestsystem.delivery.testadmin.domain.Proctor;
import org.opentestsystem.delivery.testadmin.domain.ProctorRole;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;

public class ProctorRepositoryImpl implements ProctorRepositoryCustom {

    @Autowired
    private transient MongoOperations mongoOperations;

    private ObjectId getObjectId(final String id) {
        return new ObjectId(id);
    }

    @Override
    public Proctor findByUserId(final String userId) {
        return mongoOperations.findOne(new Query(Criteria.where("user._id").is(getObjectId(userId))), Proctor.class);
    }

    @Override
    public List<Proctor> findByAssociatedRoles(final List<ProctorRole> roles) {

        List<String> stringRoles = new ArrayList<String>();

        for (ProctorRole procRole : roles) {
            stringRoles.add(procRole.getName());
        }

        Query query = new Query(Criteria.where("user.roleAssociations.role").in(stringRoles));

        return mongoOperations.find(query, Proctor.class);
    }

    @Override
    public List<Proctor> findProctorsByInstitution(String institutionMongoId) {
        return mongoOperations.find(new Query(Criteria.where("user.roleAssociations.associatedEntityMongoId").is(institutionMongoId)), Proctor.class);
    }
}
