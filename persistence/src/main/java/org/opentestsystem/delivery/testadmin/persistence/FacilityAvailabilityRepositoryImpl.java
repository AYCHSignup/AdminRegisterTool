/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.persistence;

import org.bson.types.ObjectId;
import org.joda.time.DateTime;
import org.opentestsystem.delivery.testadmin.domain.FacilityAvailability;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Field;
import org.springframework.data.mongodb.core.query.Query;

import com.mongodb.DBObject;

public class FacilityAvailabilityRepositoryImpl implements FacilityAvailabilityRepositoryCustom {
    
    @Autowired
    private transient MongoOperations mongoOperations;

    @Override
    public FacilityAvailability findByFacilityIdAndInstitutionIdentifierAndTimeSlot(String facilityId,
            String institutionIdentifier, DateTime scheduledDate, final String timeSlotId) {
        return mongoOperations.findOne(
                new Query(Criteria.where("facilityId").is(facilityId).andOperator(
                               Criteria.where("institutionId").is(institutionIdentifier),        
                               Criteria.where("fromDate").lte(scheduledDate).andOperator(Criteria.where("toDate").gte(scheduledDate))
                     )){
                    public DBObject getFieldsObject() {
                        return Criteria.where("facilityTimes").elemMatch(Criteria.where("timeSlot._id").is(new ObjectId(timeSlotId))).getCriteriaObject();
                    }
                    public Field fields() {
                        return new Field().include("facilityTimes");
                    }
                }, 
                FacilityAvailability.class);
    }
}
