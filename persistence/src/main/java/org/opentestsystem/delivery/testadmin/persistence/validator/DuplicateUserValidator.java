/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * https://bitbucket.org/sbacoss/eotds/wiki/AIR_Open_Source_License
 ******************************************************************************/
package org.opentestsystem.delivery.testadmin.persistence.validator;

import org.apache.commons.lang.StringUtils;
import org.opentestsystem.delivery.testreg.domain.FormatType;
import org.opentestsystem.delivery.testreg.domain.User;
import org.opentestsystem.delivery.testreg.service.TestRegPersister;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.validation.Errors;
import org.springframework.validation.SmartValidator;

@Component
public class DuplicateUserValidator implements SmartValidator {

    @Autowired
    private TestRegPersister userService;

    @Override
    public boolean supports(final Class<?> inClazz) {
        return inClazz.isAssignableFrom(User.class);
    }
    @Override
    public void validate(final Object inTarget, final Errors inErrors) {
        final User user = (User) inTarget;
        if (user != null && StringUtils.isEmpty(user.getId()) && !StringUtils.isEmpty(user.getEmail())) {
            SearchResponse<User> searchResponse = userService.searchDomainObjects(user.createAlternateKeySearchRequest(), FormatType.USER);
            if (searchResponse.getTotalCount() > 0) {
                inErrors.rejectValue("email", "user.already.exists", new String[0], "user.already.exists");
            }
        }

    }
    @Override
    public void validate(final Object inTarget, final Errors inErrors, final Object... inValidationHints) {
        validate(inTarget, inErrors);
    }
}
