/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.service.impl;

import java.util.List;

import org.opentestsystem.delivery.testadmin.domain.Proctor;
import org.opentestsystem.delivery.testadmin.domain.search.ProctorSearchRequest;
import org.opentestsystem.delivery.testadmin.persistence.ProctorRepository;
import org.opentestsystem.delivery.testadmin.service.ProctorService;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class ProctorServiceImpl implements ProctorService  {
    
    @Autowired
    private ProctorRepository proctorRepository;

    @Override
    public Proctor saveProctor(Proctor proctor) {
        return proctorRepository.save(proctor);
    }

    @Override
    public void saveProctors(List<Proctor> proctorList) {        
        for(Proctor proctor: proctorList) {
            saveProctor(proctor);
        }
    }

    @Override
    public Proctor findProctorById(String id) {
        return proctorRepository.findOne(id);
    }

    @Override
    public SearchResponse<Proctor> searchProctors(ProctorSearchRequest proctorSearchRequest) {
        return proctorRepository.search(proctorSearchRequest);
    }

    @Override
    public Proctor findProctorByUserId(String userId) {
        return proctorRepository.findByUserId(userId);
    }

    @Override
    public List<Proctor> findProctorsByInstitution(String institutionMongoId) {        
        return proctorRepository.findProctorsByInstitution(institutionMongoId);
    }   
    
    @Override
    public void removeProctor(Proctor proctor){
      proctorRepository.delete (proctor);
    }
}
