/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testadmin.service.impl;

import java.util.List;

import org.opentestsystem.delivery.testadmin.domain.Facility;
import org.opentestsystem.delivery.testadmin.domain.search.FacilitySearchRequest;
import org.opentestsystem.delivery.testadmin.persistence.FacilityRepository;
import org.opentestsystem.delivery.testadmin.service.FacilityService;
import org.opentestsystem.shared.exception.LocalizedException;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DuplicateKeyException;
import org.springframework.stereotype.Service;

@Service
public class FacilityServiceImpl implements FacilityService {

    @Autowired
    private FacilityRepository facilityRepository;

    @Override
    public Facility getFacility(String facilityId) {
        return facilityRepository.findOne(facilityId);
    }

    @Override
    public Facility saveFacility(Facility facility) {
        // create or update seats derived from seat configuration
        facility.createSeatsFromConfiguration();
        try {
            return facilityRepository.save(facility);
        } catch (DuplicateKeyException dke) {
            throw new LocalizedException("facility.already.exists", new String[] { facility.getFacilityName(),
                    facility.getInstitutionIdentifier() });
        }
    }

    @Override
    public void removeFacility(String facilityId) {
        facilityRepository.delete(facilityId);
    }

    @Override
    public SearchResponse<Facility> searchFacilities(FacilitySearchRequest searchRequest) {
        return facilityRepository.search(searchRequest);
    }

    @Override
    public List<Facility> getFacilities(String institutionIdentifier) {
        return facilityRepository.findByInstitutionId(institutionIdentifier);
    }
}
