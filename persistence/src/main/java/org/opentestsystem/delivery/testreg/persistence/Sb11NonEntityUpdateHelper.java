/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * https://bitbucket.org/sbacoss/eotds/wiki/AIR_Open_Source_License
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.persistence;

import java.util.List;

import org.opentestsystem.delivery.testreg.domain.HierarchyLevel;
import org.opentestsystem.delivery.testreg.domain.Sb11NonEntity;
import org.opentestsystem.shared.exception.LocalizedException;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.core.query.Update;

import com.google.common.collect.Lists;

public final class Sb11NonEntityUpdateHelper {
    private static final List<HierarchyLevel> SUPPORTED_BATCH_ENTITY_FORMATS = Lists.newArrayList(HierarchyLevel.DISTRICT, HierarchyLevel.INSTITUTION);

    private Sb11NonEntityUpdateHelper() {
        // singleton
    }

    public static <T extends Sb11NonEntity> void updateEntityForStudentGroupsByEntityFilter(final String oldEntityId, final String newEntityId, final HierarchyLevel hierarchyLevel,
            final MongoOperations mongoOperations, final Class<T> clazz) {

        if (!SUPPORTED_BATCH_ENTITY_FORMATS.contains(hierarchyLevel)) {
            throw new LocalizedException("testreg.batchupdate.unsupported.formatype");
        }
        final String fieldToSwap = hierarchyLevel == HierarchyLevel.DISTRICT ? "districtIdentifier" : "institutionIdenfier";
        final Query query = new Query();
        query.addCriteria(Criteria.where(fieldToSwap).is(oldEntityId));

        final Update update = new Update();
        update.set(fieldToSwap, newEntityId);

        mongoOperations.updateMulti(query, update, clazz);
    }
}
