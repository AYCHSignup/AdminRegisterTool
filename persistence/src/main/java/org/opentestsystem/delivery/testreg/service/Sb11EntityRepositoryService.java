/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.service;

import java.util.List;
import java.util.Set;

import org.opentestsystem.delivery.testreg.domain.FormatType;
import org.opentestsystem.delivery.testreg.domain.HierarchyLevel;
import org.opentestsystem.delivery.testreg.domain.Sb11Entity;
import org.opentestsystem.delivery.testreg.domain.Sb11SuperEntity;
import org.opentestsystem.shared.progman.client.domain.TenantType;

public interface Sb11EntityRepositoryService {

    /**
     * Returns the Entity by looking up its entity id
     * 
     * @param entityId
     * @param clazz
     * @return Entity
     */
    <S extends Sb11SuperEntity> S findByEntityId(final String entityId, final Class<S> clazz);
    
    <S extends Sb11Entity> List<S> findById(final Set<String> entityIds, final Class<S> clazz);

    /**
     * Returns the Entity by looking up its entity id and State Abbreviation
     * 
     * @param entityId
     * @param stateAbbreviation
     * @param clazz
     * @return Entity
     */
    <S extends Sb11Entity> S findByEntityIdAndStateAbbreviation(final String entityId, final String stateAbbreviation,
            final Class<S> clazz);

    /**
     * Returns the entity by looking up parent entity type and parent entity id
     * 
     * @param parentEntityType
     * @param parentEntityId
     * @param formatType
     * @return Entities
     */
    <S extends Sb11Entity> List<S> findAllByParentEntityTypeAndParentEntityId(final String parentEntityType,
            final String parentEntityId, final FormatType formatType);

    /**
     * Returns the entities by looking up parent entity type.
     * 
     * @param parentEntityType
     * @param hierarchyLevel
     * @return Entities
     */
    <S extends Sb11Entity> List<S> findAllByParentEntityType(final String parentEntityType,
            final HierarchyLevel hierarchyLevel);

    /**
     * Returns the entity by looking up parent entity type and parent Id
     * 
     * @param parentEntityType
     * @param parentMongoId
     * @param clazz
     * @return Entities
     */
    <S extends Sb11Entity> List<S> findAllByParentEntityTypeAndParentId(final String parentEntityType,
            final String parentMongoId, final Class<S> clazz);

    /**
     * Returns the Entity by looking up its entity id
     * 
     * @param entityId
     * @param tenantType
     * @return Entity
     */
    <S extends Sb11SuperEntity> S findByEntityId(final String entityId, final TenantType tenantType);

    /**
     * Returns the Entity by looking up its entity id and State Abbreviation
     * 
     * @param entityId
     * @param stateAbbreviation
     * @param tenantType
     * @return Entity
     */
    <S extends Sb11Entity> S findByEntityIdAndStateAbbreviation(final String entityId, final String stateAbbreviation,
            final TenantType tenantType);

    /**
     * Returns a list of entities by looking up by entity id
     * 
     * @param entityId
     * @param clazz
     * @return Entities
     */
    <S extends Sb11Entity> List<S> findAllByEntityId(final String entityId, final Class<S> clazz);

    /**
     * Returns a list of entities by looking up by entity id and entity name
     * 
     * @param entityId
     * @param entityName
     * @param clazz
     * @return Entities
     */
    <S extends Sb11Entity> List<S> findAllByEntityIdAndEntityName(final String entityId, final String entityName,
            final Class<S> clazz);

    <S extends Sb11Entity> S getParentEntity(final S entity);

}
