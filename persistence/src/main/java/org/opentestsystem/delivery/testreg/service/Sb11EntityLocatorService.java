/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2016 Regents of the University of California
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 *
 * SmarterApp Open Source Assessment Software Project: http://smarterapp.org
 * Developed by Fairway Technologies, Inc. (http://fairwaytech.com)
 * for the Smarter Balanced Assessment Consortium (http://smarterbalanced.org)
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.service;

import org.opentestsystem.delivery.testreg.domain.FormatType;
import org.opentestsystem.delivery.testreg.domain.Sb11Entity;

import java.util.List;
import java.util.Map;

/**
 * This service takes a set of criteria and a format type and locates the Sb11Entity objects matching the incoming
 * parameters and type. The logic in these two methods was ported to the service layer from its original location
 * in the package org.opentestsystem.delivery.testreg.rest.Sb11EntityControllerHelper;
 *
 * @see Sb11Entity
 * @see FormatType
 *
 */
public interface Sb11EntityLocatorService {

    /**
     *
     * @param parameters A map of parameters to the find request which is taken from
     *                   HttpServletRequest.getParameterMap in practice
     * @param formatType The formatType corresponds to a Sb11Entity subclass that this method is meant to search
     * @return A list of matching entities
     */
    List<Sb11Entity> findEntities(final Map<String, String[]> parameters, final FormatType formatType);

    /**
     *
     * @param parameters A map of parameters to the find request which is taken from
     *                   HttpServletRequest.getParameterMap in practice
     * @param formatType The formatType corresponds to a Sb11Entity subclass that this method is meant to search
     * @return A list of entities that are the parent(s) of the matched entity
     */
    List<Sb11Entity> findParentEntities(final Map<String, String[]> parameters, final FormatType formatType);

}
