/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testreg.persistence.config;

import net.sf.ehcache.Cache;
import net.sf.ehcache.config.CacheConfiguration;
import net.sf.ehcache.store.MemoryStoreEvictionPolicy;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * Spring configuration for caching.
 */
@Configuration
public class TestRegCachingConfig {

    @Bean(destroyMethod = "shutdown")
    public net.sf.ehcache.CacheManager testRegCacheManager() {
        final net.sf.ehcache.config.Configuration config = new net.sf.ehcache.config.Configuration();
        config.setName("testRegCacheManager");
        config.setUpdateCheck(false);

        // TODO: We should probably configure each cache differently (assuming they need different configuration)
        final String[] cacheNames = { "Testreg.Client", "SbacRolesAsSbacEntitiesAsMongoIds", "roleToEntityCache",
                "institution.ncesid", "sb11EntityCache" };
        for (final String cacheName : cacheNames) {
            final Cache c = new Cache(new CacheConfiguration(cacheName, 1000).memoryStoreEvictionPolicy("LRU"));
            config.addCache(c.getCacheConfiguration());
        }

        final Cache c = new Cache(
                new CacheConfiguration("UberEntityRelationshipMap", 10000)
                        .memoryStoreEvictionPolicy(MemoryStoreEvictionPolicy.LRU));
        config.addCache(c.getCacheConfiguration());

        return net.sf.ehcache.CacheManager.newInstance(config);
    }
}