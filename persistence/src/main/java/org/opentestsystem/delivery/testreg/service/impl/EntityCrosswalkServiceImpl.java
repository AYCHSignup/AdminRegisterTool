/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.service.impl;

import java.util.List;
import java.util.Map;

import org.opentestsystem.delivery.testreg.domain.EntityCrosswalk;
import org.opentestsystem.delivery.testreg.domain.FormatType;
import org.opentestsystem.delivery.testreg.persistence.EntityCrosswalkRepository;
import org.opentestsystem.delivery.testreg.service.EntityCrosswalkService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.google.common.collect.Maps;

@Service
public class EntityCrosswalkServiceImpl implements EntityCrosswalkService {

    @Autowired
    private EntityCrosswalkRepository entityCrosswalkRepo;

    @Override
    public List<EntityCrosswalk> saveCrosswalkList(List<EntityCrosswalk> entityCrosswalkList) {
        return entityCrosswalkRepo.save(entityCrosswalkList);
    }

    @Override
    public List<EntityCrosswalk> findByFormatType(FormatType formatType) {
        return entityCrosswalkRepo.findByFormatType(formatType);
    }

    @Override
    public Map<String, String> getFormatType(FormatType formatType) {
        Map<String, String> crosswalkMap = Maps.newHashMap();
        List<EntityCrosswalk> crosswalkList = entityCrosswalkRepo.findByFormatType(formatType);
        for (EntityCrosswalk crosswalkEntry : crosswalkList) {
            crosswalkMap.put(crosswalkEntry.getColumnName(), crosswalkEntry.getDisplayName());
        }
        return crosswalkMap;
    }
}
