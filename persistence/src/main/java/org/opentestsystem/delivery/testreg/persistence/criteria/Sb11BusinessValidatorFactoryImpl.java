/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.persistence.criteria;

import org.opentestsystem.delivery.testreg.domain.Action;
import org.opentestsystem.delivery.testreg.domain.TestRegistrationBase;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class Sb11BusinessValidatorFactoryImpl implements Sb11BusinessValidatorFactory {

    @Autowired
    private BusinessValidator<TestRegistrationBase>[] sb11BusinessValidators;

    @Override
    public <T extends BusinessValidator<TestRegistrationBase>> T getBusinessValidator(
            final TestRegistrationBase sb11Entity) {
        return getBusinessValidator(sb11Entity, sb11Entity.getAction());
    }

    @Override
    public <T extends BusinessValidator<TestRegistrationBase>> T getBusinessValidator(
            final TestRegistrationBase sb11Entity, final Action action) {
        return getBusinessValidator(sb11Entity.getClass(), action);
    }

    @SuppressWarnings("unchecked")
    private <T extends BusinessValidator<TestRegistrationBase>> T getBusinessValidator(
            final Class<? extends TestRegistrationBase> sb11EntityClass, final Action action) {
        for (BusinessValidator<TestRegistrationBase> businessValidator : sb11BusinessValidators) {
            if (businessValidator.supports(sb11EntityClass)) {
                try {
                    Action businessAction = businessValidator.getAction();
                    if (businessAction.equals(action)) {
                        return (T) businessValidator;
                    }
                } catch (UnsupportedOperationException usoe) {
                    continue; // Move on
                }
            }
        }
        return null;
    }
}
