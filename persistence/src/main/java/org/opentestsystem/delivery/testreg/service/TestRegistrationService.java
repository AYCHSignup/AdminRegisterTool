/*
Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research

Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 */

package org.opentestsystem.delivery.testreg.service;

import java.util.List;

import org.opentestsystem.delivery.testreg.domain.FormatType;
import org.opentestsystem.delivery.testreg.domain.TestRegistrationBase;
import org.opentestsystem.shared.search.domain.AbstractSearchRequest;
import org.opentestsystem.shared.search.domain.SearchResponse;

public interface TestRegistrationService<T extends TestRegistrationBase> {

    /**
     * Find Domain object by Id.
     * 
     * @param pkId
     *            mongo id of the stored object
     * @param formatType
     *            type of object
     * @return domain object
     */
    T findById(String pkId, FormatType formatType);

    /**
     * Find all domain objects of a type.
     * 
     * @param formatType
     *            type of object
     * @return List of objects
     */
    List<T> findAll(FormatType formatType);

    /**
     * Save domain object
     * 
     * @param domainObj
     *            object
     * @return saved object
     */
    T saveDomainObject(T domainObj);

    /**
     * Update domain object.
     * 
     * @param domainObj
     *            domain object
     * @return updated object
     */
    T updateDomainObject(T domainObj);

    /**
     * Delete domain object.
     * 
     * @param domainObj
     *            domainObject
     */
    void deleteDomainObject(T domainObj);

    /**
     * Delete domain object by id.
     * 
     * @param pkId
     *            mongo id
     * @param formatType
     *            type of entity
     */
    void deleteDomainObject(String pkId, FormatType formatType);

    /**
     * Save list of domain objects.
     * 
     * @param domainObjList
     *            list of objects
     * @return List of saved objects
     */
    List<T> saveDomainObjects(List<T> domainObjList);

    /**
     * Update list of domain objects.
     * 
     * @param domainObjList
     *            list of objects
     * @return List of updated objects
     */
    List<T> updateDomainObjects(List<T> domainObjList);

    /**
     * Delete list of domain objects.
     * 
     * @param domainObjList
     *            list of objects
     */
    void deleteDomainObjects(List<T> domainObjList);

    /**
     * Search domain objects.
     * 
     * @param searchRequest
     *            search request containing search criteria
     * @param formatType
     *            type of entity to be searched
     * @return SearchResponse for the searched entity
     */
    SearchResponse<T> searchDomainObjects(AbstractSearchRequest searchRequest, FormatType formatType);

    /**
     * Checks if entity has any associated entity
     * 
     * @param entity
     *            entity
     * @return true if has associated entity else false
     */
    boolean hasAssociatedEntity(final T entity);

}