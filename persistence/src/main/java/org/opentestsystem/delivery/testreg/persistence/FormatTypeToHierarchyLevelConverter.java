/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.persistence;

import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.CLIENT;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.DISTRICT;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.GROUPOFDISTRICTS;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.GROUPOFINSTITUTIONS;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.GROUPOFSTATES;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.INSTITUTION;
import static org.opentestsystem.delivery.testreg.domain.HierarchyLevel.STATE;

import org.opentestsystem.delivery.testreg.domain.FormatType;
import org.opentestsystem.delivery.testreg.domain.HierarchyLevel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.converter.Converter;
import org.springframework.core.convert.support.GenericConversionService;

public class FormatTypeToHierarchyLevelConverter implements Converter<FormatType, HierarchyLevel> {
    
    @Autowired
    public FormatTypeToHierarchyLevelConverter(GenericConversionService conversionService) {
        conversionService.addConverter(this);
    }

    @Override
    public HierarchyLevel convert(FormatType format) {       
        switch(format) {
            case CLIENT:
                return CLIENT;
            case STATE:
                return STATE;
            case DISTRICT:
                return DISTRICT;
            case INSTITUTION:
                return INSTITUTION;
            case GROUPOFSTATES:
                return GROUPOFSTATES;
            case GROUPOFDISTRICTS:
                return GROUPOFDISTRICTS;
            case GROUPOFINSTITUTIONS:
                return GROUPOFINSTITUTIONS;
            default:
                throw new IllegalArgumentException("Cannot Convert FormatType " + format.getFormatName() + " to Hierarchy level"); 
        }
    }
}
