/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.xstream.custom;

import java.lang.reflect.Field;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.opentestsystem.delivery.testreg.domain.XmlOrderSequence;
import org.springframework.core.annotation.AnnotationUtils;

import com.thoughtworks.xstream.converters.reflection.FieldKey;
import com.thoughtworks.xstream.converters.reflection.FieldKeySorter;
import com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter;
import com.thoughtworks.xstream.core.util.OrderRetainingMap;

public class OrderSequenceKeyFieldSorter implements FieldKeySorter {
    
    SortableFieldKeySorter sortablefieldKeySorter = new SortableFieldKeySorter();

    @SuppressWarnings({ "rawtypes", "unchecked" })
    @Override
    public Map sort(Class type, Map keyedByFieldKey) {
        XmlOrderSequence orderSequence = AnnotationUtils.findAnnotation(type, XmlOrderSequence.class);
        
        if(orderSequence !=null) {
            return getFieldMap(keyedByFieldKey, orderSequence.value());
        }
        return keyedByFieldKey;
    }
    
    private Map<FieldKey, Field> getFieldMap(Map<FieldKey, Field> keyedByFieldKey, String[] fields) {
        @SuppressWarnings("unchecked")
        Map<FieldKey, Field> map = new OrderRetainingMap();
        
        Set<Entry<FieldKey, Field>> set = keyedByFieldKey.entrySet();
        for(String fieldName: fields) {
            for(Entry<FieldKey, Field> fieldKeyEntry: set) {
                FieldKey fieldKey = fieldKeyEntry.getKey();
                if(fieldName.equals(fieldKey.getFieldName())) {
                    map.put(fieldKey, fieldKeyEntry.getValue());
                }
            }
            
        }
        return map;
    }

}
