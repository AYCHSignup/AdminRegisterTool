/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.persistence;

import static org.opentestsystem.shared.progman.client.domain.TenantType.CLIENT;
import static org.opentestsystem.shared.progman.client.domain.TenantType.DISTRICT;
import static org.opentestsystem.shared.progman.client.domain.TenantType.DISTRICT_GROUP;
import static org.opentestsystem.shared.progman.client.domain.TenantType.INSTITUTION;
import static org.opentestsystem.shared.progman.client.domain.TenantType.INSTITUTION_GROUP;
import static org.opentestsystem.shared.progman.client.domain.TenantType.STATE;
import static org.opentestsystem.shared.progman.client.domain.TenantType.STATE_GROUP;

import org.opentestsystem.delivery.testreg.domain.HierarchyLevel;
import org.opentestsystem.shared.progman.client.domain.TenantType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.converter.Converter;
import org.springframework.core.convert.support.GenericConversionService;


public class HierarchyLevelToTenantTypeConverter implements Converter<HierarchyLevel, TenantType> {
    
    @Autowired
    public HierarchyLevelToTenantTypeConverter(GenericConversionService conversionService) {
        conversionService.addConverter(this);
    }

    @Override
    public TenantType convert(HierarchyLevel level) {
        switch(level) {
            case CLIENT:
                return CLIENT;
            case DISTRICT:
                return DISTRICT;
            case GROUPOFDISTRICTS:
                return DISTRICT_GROUP;
            case INSTITUTION:
                return INSTITUTION;
            case GROUPOFINSTITUTIONS:
                return INSTITUTION_GROUP;
            case STATE:
                return STATE;
            case GROUPOFSTATES:
                return STATE_GROUP;
        }
        throw new IllegalArgumentException("Unknown HierarchyLevel received");
    }

}
