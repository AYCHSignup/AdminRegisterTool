/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testreg.persistence.criteria.verifiers;

import static org.opentestsystem.delivery.testreg.domain.AnnotationHelper.getFieldLabel;
import static org.opentestsystem.delivery.testreg.persistence.criteria.verifiers.VerifierUtils.addFieldError;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.opentestsystem.delivery.testreg.domain.Sb11Entity;
import org.opentestsystem.delivery.testreg.persistence.Verifier;
import org.opentestsystem.delivery.testreg.service.impl.Sb11EntityServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.validation.FieldError;

@Component
public class Sb11EntityVerifier implements Verifier<Sb11Entity> {
	
	 @Autowired
	 private Sb11EntityServiceImpl<Sb11Entity> sb11EntityService;
	 
	 @Resource(name = "sb11EntityAssociationVerifier")
	 private Verifier<Sb11Entity> sb11EntityAssociationVerifier;
	 
	 @Autowired
	 private VerifierUtils verifierUtils;

	 @Override
	 public List<FieldError> verify(Sb11Entity sb11Entity) {	
		Sb11Entity sb11EntityFound = verifierUtils.getSb11EntityFromDB(sb11Entity);
		
		if (sb11EntityFound == null) {
			List<FieldError> errors = new ArrayList<>();
            String entityIdLabel = getFieldLabel(sb11Entity, "entityId");
            addFieldError(
            		errors, 
            		sb11Entity, 
            		entityIdLabel, 
            		sb11Entity.getEntityId(), 
            		entityIdLabel + " not found in DB for delete");
            return errors;
            
        } 
        return sb11EntityAssociationVerifier.verify(sb11EntityFound);
	}
}
