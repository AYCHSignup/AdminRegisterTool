/*
Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research

Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 */

package org.opentestsystem.delivery.testreg.transformer;

import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
import org.springframework.messaging.Message;
import org.springframework.integration.annotation.Transformer;
import org.springframework.integration.support.MessageBuilder;
import org.springframework.stereotype.Component;

@Component("dwHeaderGenerator")
public class DwHeaderGenerator {

    private static final String UUID_PATTERN = "\\w{8}-\\w{4}-\\w{4}-\\w{4}-(\\w{12})";

    private static final String DATE_TIME_FORMAT = "YYYY-MM-dd";

    private static final DateTimeFormatter DT_FORMAT = DateTimeFormat.forPattern(DATE_TIME_FORMAT);

    private String generateBatchUuid() {
        return UUID.randomUUID().toString();
    }

    @Transformer
    public Message<?> addHeaders(Message<?> message) {

        String uuid = generateBatchUuid();

        String todayString = getTodaysDate();

        Pattern uuidPattern = Pattern.compile(UUID_PATTERN);
        Matcher matcher = uuidPattern.matcher(uuid);
        @SuppressWarnings("unused")
        boolean uuidpatternmatches = matcher.matches();
        String uuidEnd = matcher.group(1);

        String fileSuffix = todayString + "-" + uuidEnd;

        return MessageBuilder.fromMessage(message).setHeader("dwBatchUuid", uuid).setHeader("fileSuffix", fileSuffix)
                .build();

    }

    private String getTodaysDate() {
        DateTime today = new DateTime();

        return today.toString(DT_FORMAT);
    }

}
