/*
Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research

Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 */

package org.opentestsystem.delivery.testreg.service.impl.domain;

import org.opentestsystem.delivery.testreg.domain.FormatType;
import org.opentestsystem.delivery.testreg.domain.Student;
import org.opentestsystem.delivery.testreg.domain.TestRegistrationBase;
import org.opentestsystem.delivery.testreg.domain.User;
import org.opentestsystem.shared.exception.LocalizedException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class AssociationCreatorInvoker {

    @Autowired
    private StudentAssociationCreator studentAssociationCreator;

    @Autowired
    private UserAssociationCreator userAssociationCreator;

    @SuppressWarnings("unchecked")
    public <T extends TestRegistrationBase> T createAssociations(final T domainObj) {

        switch (domainObj.getFormatType()) {
            case STUDENT:
                return (T) studentAssociationCreator.createAssociations((Student) domainObj);
            case USER:
                return (T) userAssociationCreator.createAssociations((User) domainObj);
            case ASSESSMENT:
                return domainObj;
            case EXPLICITELIGIBILITY:
                return domainObj; // do we need associations here? probably not...
            case STUDENTGROUP:
                return domainObj;
            default:
                throw createFormatTypeException(domainObj.getFormatType());
        }

    }

    private static LocalizedException createFormatTypeException(final FormatType type) {
        return new LocalizedException("entity.invalid.formattype", new String[] { type.toString() });
    }

}
