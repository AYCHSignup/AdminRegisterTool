/*
Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research

Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 */

package org.opentestsystem.delivery.testreg.service;

import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.joda.time.DateTime;
import org.opentestsystem.delivery.testreg.domain.Assessment;
import org.opentestsystem.delivery.testreg.domain.EligibleStudent;
import org.opentestsystem.delivery.testreg.domain.ExplicitEligibility;
import org.opentestsystem.delivery.testreg.domain.Student;
import org.opentestsystem.delivery.testreg.domain.search.EligibleStudentSearchRequest;
import org.opentestsystem.shared.search.domain.SearchResponse;

public interface EligibilityService {

    List<Assessment> findEligibleAssessmentsByStudent(String studentMongoId);

    Set<Assessment> findAllAssessmentsByTenantsAndBeginWindow(Collection<String> tenantsList, DateTime date);

    /**
     * Finds all the EligibleAssessment for the begin window
     * 
     * @param entityId
     * @param stateAbbreviation
     * @return
     */
    List<Assessment> findEligibleAssessmentsByTestWindow(String entityId, String stateAbbreviation);

    Map<ExplicitEligibility, DateTime> findAllEligibilityByStudentIdStateAbbreviationAndBeginWindow(String studentId,
            String stateAbbreviation, DateTime date);

    List<Assessment> findEligibleAssessmentsByStudentIdAndState(String studentId, String state);
    

    void saveAssociation(Assessment assess, Student student);

    void saveAssociations(Assessment assess, List<Student> students);

    void removeAssociation(Assessment assess, Student student);

    void removeAssociations(Assessment assess, List<Student> student);

    void removeAllAssociationsForStudent(Student student);

    void removeAllAssociationsForAssessment(Assessment assess);

    /**
     * Use at your own risk, will remove entire collection
     */
    void removeEligibleStudentCollection();

    SearchResponse<Student> findStudents(final EligibleStudentSearchRequest searchRequest);
    
    SearchResponse<EligibleStudent> findEligibleStudents(final EligibleStudentSearchRequest searchRequest);

}
