/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.persistence.criteria.verifiers;

import java.util.List;

import javax.annotation.Resource;

import org.opentestsystem.delivery.testreg.domain.Sb11Entity;
import org.opentestsystem.delivery.testreg.persistence.Verifier;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.validation.FieldError;

@Component
public class Sb11EntityVerifierChain implements Verifier<Sb11Entity> {
    
    @Resource(name = "sb11EntityVerifier")
    private Verifier<Sb11Entity> sb11EntityVerifier;
    
    @Resource(name = "studentAssociationVerifier")
    private Verifier<Sb11Entity> studentAssociationVerifier;
    
    @Resource(name = "userAssociationVerifier")
    private Verifier<Sb11Entity> userAssociationVerifier;
    
    @Autowired
    private VerifierUtils verifierUtils;

    @Override
    public List<FieldError> verify(Sb11Entity sb11Entity) {
        List<FieldError> errors = sb11EntityVerifier.verify(sb11Entity);
        if(errors.isEmpty()) {
            /*
             * If we have this far then it means Sb11Entity is available in DB. So lets run verification on that object. 
             */
            Sb11Entity entityFound = verifierUtils.getSb11EntityFromDB(sb11Entity);
            errors = studentAssociationVerifier.verify(entityFound);
            
            if(errors.isEmpty()) {
                errors = userAssociationVerifier.verify(entityFound);
            }
        }
        return errors;
    }
}
