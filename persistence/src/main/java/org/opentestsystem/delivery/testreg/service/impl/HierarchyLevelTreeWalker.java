/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.service.impl;

import org.opentestsystem.delivery.testreg.domain.GroupOfStatesEntity;
import org.opentestsystem.delivery.testreg.domain.HierarchyLevel;
import org.opentestsystem.delivery.testreg.domain.Sb11Entity;
import org.opentestsystem.delivery.testreg.domain.Sb11SuperEntity;
import org.opentestsystem.delivery.testreg.service.Sb11EntityRepositoryService;

public class HierarchyLevelTreeWalker {
    
    private final Sb11EntityRepositoryService sb11EntityRepositoryService;

    public HierarchyLevelTreeWalker(Sb11EntityRepositoryService sb11EntityRepositoryService) {
     this.sb11EntityRepositoryService = sb11EntityRepositoryService;   
    }
    
    public Sb11Entity getGOS(Sb11Entity entity) {  
        if(entity.getParentEntityType() == HierarchyLevel.GROUPOFSTATES) {
            return sb11EntityRepositoryService.findByEntityId(entity.getParentEntityId(), GroupOfStatesEntity.class);
        } 
        
        if(isASuperEntity(entity.getEntityType()) || isASuperEntity(entity.getParentEntityType())) {
            return entity;
        }  else {
            Sb11Entity sb11Entity = sb11EntityRepositoryService.findByEntityIdAndStateAbbreviation(
                    entity.getParentEntityId(), entity.getStateAbbreviation(), entity.getParentEntityType().getEntityClass()); 
            return getGOS(sb11Entity);
        }
    }
    
    private boolean isASuperEntity(final HierarchyLevel level) {
        return Sb11SuperEntity.class.isAssignableFrom(level.getEntityClass());
    }

}
