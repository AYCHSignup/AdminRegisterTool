<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <context:component-scan base-package="org.opentestsystem.delivery.testreg.aop,
                                          org.opentestsystem.delivery.testreg.aop.trigger,
                                          org.opentestsystem.delivery.testreg.service,
                                          org.opentestsystem.delivery.testreg.eligibility,
                                          org.opentestsystem.delivery.testreg.xstream.converters,
                                          org.opentestsystem.delivery.testreg.event,
                                          org.opentestsystem.delivery.testreg.persistence.config,
                                          org.opentestsystem.shared.security.service,
                                          org.opentestsystem.shared.security.integration,
                                          org.opentestsystem.delivery.testadmin.service,
                                          org.opentestsystem.delivery.testadmin.scheduling,
                                          org.opentestsystem.delivery.testadmin.service.impl"/>

    <!-- use an async version of an UserChangeEventService -->
    <bean id="userChangeEventService" class="org.opentestsystem.delivery.testreg.service.impl.UserChangeEventServiceAsyncImpl"/>

    <bean id="fileUploadService" class="org.opentestsystem.delivery.testreg.service.impl.FileUploadServiceImpl"/>

    <bean id="entityService" class="org.opentestsystem.delivery.testreg.service.impl.Sb11EntityServiceImpl"/>
    
    <bean id="clientServiceImpl" class="org.opentestsystem.delivery.testreg.service.impl.ClientServiceImpl"/>

    
    <bean id="studentConverter" class="org.opentestsystem.delivery.testreg.xstream.converters.StudentPackageStudentConverter">
        <constructor-arg name="sb11EntityRepositoryService" ref="entityService"/>
        <property name="converter" ref="reflectionConverter"/>
    </bean>

    <bean id="assessmentConverter" class="org.opentestsystem.delivery.testreg.xstream.converters.AssessmentConverter">
        <property name="converter" ref="reflectionConverter"/>
    </bean>

    <util:map id="entityRepositoryMap">
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).CLIENT}" value-ref="clientEntityRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).STATE}" value-ref="stateEntityRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).DISTRICT}" value-ref="districtEntityRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).INSTITUTION}" value-ref="institutionEntityRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).GROUPOFSTATES}" value-ref="groupOfStatesEntityRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).GROUPOFDISTRICTS}" value-ref="groupOfDistrictsEntityRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).GROUPOFINSTITUTIONS}" value-ref="groupOfInstitutionsEntityRepository"/>
    </util:map>

    <util:map id="nonEntityRepositoryMap">
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).STUDENT}" value-ref="studentRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).USER}" value-ref="userRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).ASSESSMENT}" value-ref="assessmentRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).EXPLICITELIGIBILITY}" value-ref="explicitEligibilityRepository"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).STUDENTGROUP}" value-ref="studentGroupRepository"/>
    </util:map>

    <util:map id="creatorMap">
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).STUDENT}" value-ref="studentEventCreator"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).EXPLICITELIGIBILITY}" value-ref="explicitEligibilityEventCreator"/>
        <entry key="#{T(org.opentestsystem.delivery.testreg.domain.FormatType).ASSESSMENT}" value-ref="assessmentEventCreator"/>
    </util:map>

    <bean id="staxDriver" class="org.opentestsystem.delivery.testreg.xstream.custom.CustomXmlStaxDriver"/>
    
    <bean id="fieldSorter" class="org.opentestsystem.delivery.testreg.xstream.custom.OrderSequenceKeyFieldSorter"/>
    
    <bean id="fieldDictionary" class="com.thoughtworks.xstream.converters.reflection.FieldDictionary">
    	<constructor-arg name="sorter" ref="fieldSorter"/>
    </bean>
    
    <bean id="reflectionProvider" class="org.opentestsystem.delivery.testreg.xstream.custom.CustomJavaReflectionProvider">
    	<constructor-arg name="fieldDictionary" ref="fieldDictionary"/>
    </bean>

    <bean id="xstream" class="org.opentestsystem.delivery.testreg.xstream.custom.TestRegXstream">
    	<constructor-arg name="reflectionProvider"       ref="reflectionProvider"/>
        <constructor-arg name="hierarchicalStreamDriver" ref="staxDriver"/>
        <property name="studentConverter" ref="studentConverter"/>
        <property name="assessmentConverter" ref="assessmentConverter"/>
    </bean>

    <util:list id="hierarchyLevels" value-type="org.opentestsystem.delivery.testreg.domain.HierarchyLevel">
        <value>STATE</value>
        <value>DISTRICT</value>
        <value>INSTITUTION</value>
    </util:list>
   
    <bean id="reflectionConverter" class="com.thoughtworks.xstream.converters.reflection.ReflectionConverter">
    	<constructor-arg name="reflectionProvider" ref="reflectionProvider"/>
    	<constructor-arg name="mapper"   value="#{xstream.getMapper()}"></constructor-arg>
    </bean>

    <bean id="defaultSftpSessionFactory" class="org.springframework.integration.sftp.session.DefaultSftpSessionFactory">
        <property name="host" value="${testreg.sftp.host}" />
        <!--<property name="port" value="${testreg.sftp.port}" />-->
        <property name="user" value="${testreg.sftp.user}" />
        <property name="password" value="${testreg.sftp.pass}" />
    </bean>
    
    <bean id="sb11TimeZoneBuilder" class="org.opentestsystem.delivery.Sb11TimeZoneBuilder"/>
    
    <bean id="cachedClientEntity" class="org.opentestsystem.delivery.CachedClientEntity" scope="singleton" depends-on="clientServiceImpl"/>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10" />
        <property name="maxPoolSize" value="10" />
        <property name="WaitForTasksToCompleteOnShutdown" value="false" />
    </bean>

</beans>
