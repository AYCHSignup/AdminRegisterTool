/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.domain;

import static org.hamcrest.collection.IsCollectionWithSize.hasSize;
import static org.hamcrest.core.Is.is;
import static org.hamcrest.core.IsNull.notNullValue;
import static org.junit.Assert.assertThat;

import java.util.ArrayList;
import java.util.List;

import org.joda.time.DateTime;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.delivery.testreg.domain.Assessment.EligibilityType;
import org.opentestsystem.delivery.testreg.domain.Assessment.TestWindow;

public class ExportAssessmentTest {
    
    Assessment assessment;
    
    @Before
    public void setup() {
        assessment = new Assessment();
        assessment.setDelayRule(2);
        assessment.setEligibilityType(EligibilityType.IMPLICIT);
        assessment.setEntityId("A100");
        assessment.setNumGlobalOpportunities(3);
        assessment.setSubjectCode("EOC1");
        assessment.setTestName("ELA");
        assessment.setVersion("1.0");
        TestWindow testWindow1 = new TestWindow(DateTime.now(), DateTime.now().plusYears(1), 2);
        TestWindow testWindow2 = new TestWindow(DateTime.now().plusYears(2), DateTime.now().plusYears(3), 4);
        assessment.setTestWindow(new TestWindow[]{testWindow1, testWindow2});
        
        
    }
    
    @Test
    public void testExportAssessment() {
        List<Assessment> assessmentList = new ArrayList<Assessment>();
        assessmentList.add(assessment);
        List<Assessment> exportAssessmentList = new ExportAssessment(assessmentList).getIndividualizedTestWindowAssessment();
        
        assertThat(exportAssessmentList, hasSize(2));
        assertThat(exportAssessmentList.get(0).toStringArray(), is(notNullValue())); //TODO: Check Values
        assertThat(exportAssessmentList.get(1).toStringArray(), is(notNullValue())); //TODO: Check Values
    }
    
    @Test
    public void testExportAssessmentWithEmptyWindow() {
        List<Assessment> assessmentList = new ArrayList<Assessment>();
        assessmentList.add(assessment);
        assessment.setTestWindow(null);
        
        List<Assessment> exportAssessmentList = new ExportAssessment(assessmentList).getIndividualizedTestWindowAssessment();
        assertThat(exportAssessmentList, hasSize(1));
        assertThat(exportAssessmentList.get(0).toStringArray(), is(notNullValue())); //TODO: Check Values
        
        
        assessmentList = new ArrayList<Assessment>();
        assessmentList.add(assessment);
        assessment.setTestWindow(new TestWindow[]{new Assessment.TestWindow()});
        exportAssessmentList = new ExportAssessment(assessmentList).getIndividualizedTestWindowAssessment();
        assertThat(exportAssessmentList, hasSize(1));
        assertThat(exportAssessmentList.get(0).toStringArray(), is(notNullValue())); //TODO: Check Values
    }

}
