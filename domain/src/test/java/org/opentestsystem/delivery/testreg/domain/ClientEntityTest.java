/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.domain;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertThat;

import java.util.Set;

import javax.validation.ConstraintViolation;
import javax.validation.Validator;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:spring/domain-context.xml", "classpath:test-domain-context.xml" })
public class ClientEntityTest {

    @Autowired
    protected Validator validator;

    private ClientEntity client;

    public ClientEntityTest() {
    }

    @Before
    public void setup() {
        client = new ClientEntity();

    }

    @After
    public void tearDown() {
        client = null;
    }

    @Test
    public void testBlankOrNullEntityId() {
        String message = "Client Entity Id is required";
        client.setEntityId(null);
        assertBlankOrNull("entityId", message);

        client.setEntityId("");
        assertBlankOrNull("entityId", message);

        client.setEntityId("   ");
        assertBlankOrNull("entityId", message);
    }

    @Test
    public void testBlankOrNullEntityName() {
        String message = "Client Entity Name is required";
        client.setEntityId(null);
        assertBlankOrNull("entityName", message);

        client.setEntityId("");
        assertBlankOrNull("entityName", message);

        client.setEntityId("   ");
        assertBlankOrNull("entityName", message);
    }

    protected void assertBlankOrNull(String property, String message) {
        Set<ConstraintViolation<ClientEntity>> constraintViolations = validator.validateProperty(client, property);
        assertThat(constraintViolations.size(), is(1));
        assertThat(constraintViolations.iterator().next().getMessage(), is(message));
    }

    @Test
    public void testToStringArray() {
        client.setEntityId("1234");
        client.setEntityName("100202");
        String[] columns = client.toStringArray();
        assertNotNull(columns);
        assertThat(columns.length, is(2));
    }
}
