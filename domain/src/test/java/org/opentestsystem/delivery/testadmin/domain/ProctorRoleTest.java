/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.domain;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertThat;

import java.util.Set;

import javax.validation.ConstraintViolation;
import javax.validation.Validator;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:spring/domain-context.xml"})
public class ProctorRoleTest {

    private static final String ROLE_NAME_BLLANK = "Proctor Role Name is required";
    
    private static final String ROLE_ASSESSMENT_TYPES_BLANK = "Proctor Role Assessment Types are required";
    
    @Autowired
    private Validator validator;
    
    ProctorRole proctorRole;
    
    @Before
    public void setup() {
        proctorRole = new ProctorRole();
    }
    
    @After
    public void teardown() {
        proctorRole = null;
    }
    
    @Test
    public void testBlankName() {
        validate("name", ROLE_NAME_BLLANK);
    }
    
    @Test
    public void testBlankAssessmentTypes() {
        validate("assessmentTypes", ROLE_ASSESSMENT_TYPES_BLANK);
    }
    
    private void validate(String property, String message) {
        Set<ConstraintViolation<ProctorRole>> constraintViolations = validator.validateProperty(proctorRole, property);
        assertThat(constraintViolations.size(), is(1));
        assertThat(constraintViolations.iterator().next().getMessage(), is(message));
    }
    
}
