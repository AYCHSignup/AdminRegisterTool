/*
Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research

Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 */

package org.opentestsystem.delivery.testadmin.domain.schedule;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.nullValue;
import static org.junit.Assert.assertThat;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import org.junit.Test;
import org.opentestsystem.delivery.testreg.domain.Assessment;
import org.opentestsystem.delivery.testreg.domain.Assessment.EligibilityType;
import org.opentestsystem.delivery.testreg.domain.EligibleStudent;
import org.opentestsystem.delivery.testreg.domain.Student;

public class ScheduledStudentTest {

    @Test
    public void testCreate() {

        EligibleStudent eligStudent = new EligibleStudent();

        Student student = new Student();
        student.setFirstName("John");
        student.setLastName("Smith");

        eligStudent.setStudent(student);

        Assessment assessment1 = new Assessment("1", "", "MTH", "test1", "1.0", "1", EligibilityType.EXPLICIT, "label",
                "source1");
        assessment1.setId("1");
        Assessment assessment2 = new Assessment("2", "", "MTH", "test2", "1.0", "1", EligibilityType.EXPLICIT, "label",
                "source1");
        assessment2.setId("2");
        Assessment assessment3 = new Assessment("3", "", "MTH", "test3", "1.0", "1", EligibilityType.EXPLICIT, "label",
                "source1");
        assessment3.setId("3");
        Assessment assessment4 = new Assessment("4", "", "MTH", "test4", "1.0", "1", EligibilityType.EXPLICIT, "label",
                "source1");
        assessment4.setId("4");

        Set<Assessment> eligAssess = new HashSet<Assessment>();
        eligAssess.add(assessment1);
        eligAssess.add(assessment3);

        eligStudent.setAssessments(eligAssess);

        Set<Assessment> validAssessments = new HashSet<Assessment>();
        validAssessments.add(assessment1);
        validAssessments.add(assessment2);
        validAssessments.add(assessment3);
        validAssessments.add(assessment4);

        ScheduledStudent schedStudent = new ScheduledStudent(eligStudent, validAssessments);

        assertThat(schedStudent.isStudentFullyScheduled(), is(false));
        assertThat(schedStudent.isStudentScheduled(assessment1), is(false));
        assertThat(schedStudent.isStudentScheduled(assessment2), is(false));

        Map<Assessment, Boolean> theMap = schedStudent.getScheduledAssessments();

        assertThat(theMap.get(assessment1), is(Boolean.FALSE));
        assertThat(theMap.get(assessment2), nullValue());

    }

}
