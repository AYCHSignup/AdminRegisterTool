/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.domain;

import java.io.Serializable;

import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotBlank;
import org.joda.time.DateTime;
import org.opentestsystem.delivery.testreg.domain.constraints.ValidStateCode;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

@SuppressWarnings({ "PMD.ShortVariable" })
@Document
@CompoundIndexes(value = { @CompoundIndex(name = "reportAlternateId", def = "{'studentId':1, 'stateAbbreviation':1, 'assessmentId':1, 'opportunity':1}", unique = true) })
@JsonIgnoreProperties(ignoreUnknown = true)
public class TestStatus implements Serializable {

    private static final long serialVersionUID = -6515566689625044467L;
    private static final String GET_RESOURCE_NAME = "/testStatus/";
    
    @Id
    private String id;

    @NotBlank(message = "{teststatus.assessementId.blank}")
    private String assessmentId;

    @NotBlank(message = "{teststatus.stateAbbreviation.blank}")
    @ValidStateCode
    private String stateAbbreviation;

    @NotBlank(message = "{teststatus.studentId.blank}")
    private String studentId;

    @NotBlank(message = "{teststatus.status.blank}")
    private String status;

    @NotNull(message = "{teststatus.opportunity.blank}")
    private Integer opportunity;

    private DateTime scheduledStart;
    private DateTime actualStart;
    private DateTime actualComplete;
    private DateTime optedOutOn;

    public String getId() {
        return id;
    }

    public void setId(final String inId) {
        id = inId;
    }

    public String getAssessmentId() {
        return assessmentId;
    }

    public void setAssessmentId(String assessmentId) {
        this.assessmentId = assessmentId;
    }

    public Integer getOpportunity() {
        return opportunity;
    }

    public void setOpportunity(Integer opportunity) {
        this.opportunity = opportunity;
    }

    public String getStudentId() {
        return studentId;
    }

    public void setStudentId(String studentId) {
        this.studentId = studentId;
    }

    public Status getStatus() {
        if (!status.isEmpty()) {
            return Status.valueOf(status);
        }
        throw new IllegalArgumentException("Invalid Status");
    }

    public String getStatusValue() {
        return this.getStatus().getValue();
    }

    public void setStatus(Status status) {
        this.status = status.name();
    }

    public DateTime getScheduledStart() {
        return scheduledStart;
    }

    public void setScheduledStart(DateTime scheduledStart) {
        this.scheduledStart = scheduledStart;
    }

    public DateTime getActualStart() {
        return actualStart;
    }

    public void setActualStart(DateTime actualStart) {
        this.actualStart = actualStart;
    }

    public DateTime getActualComplete() {
        return actualComplete;
    }

    public void setActualComplete(DateTime actualComplete) {
        this.actualComplete = actualComplete;
    }

    public DateTime getOptedOutOn() {
        return optedOutOn;
    }

    public void setOptedOutOn(DateTime optedOutOn) {
        this.optedOutOn = optedOutOn;
    }

    public String getStateAbbreviation() {
        return stateAbbreviation;
    }

    public void setStateAbbreviation(String stateAbbreviation) {
        this.stateAbbreviation = stateAbbreviation;
    }

    @JsonProperty
    public void setStatus(String status) {
        this.status = status;
    }

    public static TestStatus createForScheduled(final String assessmentId, final String studentId, final String state,
            final DateTime scheduledStart) {

        TestStatus statusObj = new TestStatus();

        statusObj.setAssessmentId(assessmentId);
        statusObj.setOpportunity(1);
        statusObj.setScheduledStart(scheduledStart);
        statusObj.setStateAbbreviation(state);
        statusObj.setStatus(Status.SCHEDULED);
        statusObj.setStudentId(studentId);

        return statusObj;
    }

    @JsonProperty
    public String getUrl() {
        return GET_RESOURCE_NAME + this.id;
    }
}
