/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.domain.constraintvalidators;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.opentestsystem.delivery.testadmin.domain.Proctor.AvailabilityWindow;
import org.opentestsystem.delivery.testadmin.domain.constraints.ValidEndTime;

public class EndTimeValidator implements ConstraintValidator<ValidEndTime, AvailabilityWindow> {

    private static final String TIMEPERIOD_END_TIME_MESSAGE = "{timeperiod.invalid.endtime}";
    private static final String TIMEPERIOD_END_TIME = "endDateTime";

    @Override
    public void initialize(final ValidEndTime constraintAnnotation) {

    }

    @Override
    public boolean isValid(final AvailabilityWindow windowObj, final ConstraintValidatorContext context) {

        if (windowObj.getStartDateTime() != null && windowObj.getEndDateTime() != null) {
            if (windowObj.getEndDateTime().isBefore(windowObj.getStartDateTime())) {
                context.disableDefaultConstraintViolation();
                context.buildConstraintViolationWithTemplate(TIMEPERIOD_END_TIME_MESSAGE)
                .addPropertyNode(TIMEPERIOD_END_TIME) // This constraint validates across fields but messages are specific to a node. So lets add the field name where this violation occurred
                .addConstraintViolation();
                return false;
            }
        }
        return true;
    }

}
