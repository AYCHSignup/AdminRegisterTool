/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.domain.constraintvalidators;

import static org.opentestsystem.delivery.testadmin.domain.constraintvalidators.ConstraintValidatorUtils.addPropertyNodes;

import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.opentestsystem.delivery.testadmin.domain.DateWindowable;
import org.opentestsystem.delivery.testadmin.domain.constraints.DuplicateAvailabilityWindow;
import org.springframework.beans.factory.annotation.Autowired;

public class DuplicateAvailabilityWindowValidator implements ConstraintValidator<DuplicateAvailabilityWindow, DateWindowable> {
    @Autowired
    private DuplicateWindowValidationUtil duplicateWindowValidationUtil;
    
    String node;
    
    @Override
    public void initialize(DuplicateAvailabilityWindow constraintAnnotation) {
        node = constraintAnnotation.node();
    }

    @Override
    public boolean isValid(DateWindowable dateWindowable, ConstraintValidatorContext context) {  
        
        List<Integer> duplicateIndices = duplicateWindowValidationUtil.getDuplicateIndices(dateWindowable.getDateWindows());
        if(duplicateIndices.isEmpty()) {
            return true;
        }
        
        context.disableDefaultConstraintViolation();
        for(Integer duplicateIndex: duplicateIndices) {
            
            addPropertyNodes(context, node)
            .inIterable().atIndex(duplicateIndex)
            .addConstraintViolation();
        }
        
        return false;
    }

}