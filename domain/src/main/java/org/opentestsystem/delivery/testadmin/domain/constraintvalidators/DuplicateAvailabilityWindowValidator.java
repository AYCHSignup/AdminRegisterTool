/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.domain.constraintvalidators;

import java.util.List;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.opentestsystem.delivery.testadmin.domain.Proctor;
import org.opentestsystem.delivery.testadmin.domain.constraints.DuplicateAvailabilityWindow;
import org.springframework.beans.factory.annotation.Autowired;

public class DuplicateAvailabilityWindowValidator implements ConstraintValidator<DuplicateAvailabilityWindow, Proctor> {
    @Autowired
    private DuplicateWindowValidationUtil duplicateWindowValidationUtil;
    
    @Override
    public void initialize(DuplicateAvailabilityWindow constraintAnnotation) {
        
    }

    @Override
    public boolean isValid(Proctor proctor, ConstraintValidatorContext context) {  
        
        List<Integer> duplicateIndices = duplicateWindowValidationUtil.getDuplicateIndices(proctor);
        if(duplicateIndices.isEmpty()) {
            return true;
        }
        
        context.disableDefaultConstraintViolation();
        for(Integer duplicateIndex: duplicateIndices) {
            context.buildConstraintViolationWithTemplate(context.getDefaultConstraintMessageTemplate())
                .addPropertyNode("availabilityWindow")
                .addPropertyNode("startDateTime")
                .inIterable().atIndex(duplicateIndex)
                .addConstraintViolation();
        }
        
        return false;
    }

}