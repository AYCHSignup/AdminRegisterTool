/*
Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research

Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 */

package org.opentestsystem.delivery.testadmin.domain.schedule;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Document
@JsonIgnoreProperties(ignoreUnknown = true)
public class ScheduleCreationInfo {

    // questions that we can answer here to make it easier to get data to the user through the UI:
    // how many test slots do not have a proctor?
    // which student-assessment combinations were unable to be scheduled?

    /*
     * more questions % capacity: # of testing slots, students scheduled, how many unscheduled students and assessments
     * what kind of excess capacity is there if everyone scheduled?
     * 
     * questions of accessibility equipment: did everyone who needs accessibility equipment get allocated?
     */

    private int numTimeslotsWithNoProctor;

    private Map<String, List<String>> studentsNotScheduled;

    private int numUnscheduledStudents;
    private int numUnscheduledAssessments;

    private int totalNumTestSlots;
    private int numEmptyTestSlots;
    private int totalNumSeats;
    private int numEmptySeats;
    private int numStudentsScheduled;
    private int numSeatsWithAccessibilityEquipment;
    private int numStudentAssessmentsRequiringAccessibilityEquipment;
    private int numStudentAssessmentsReqAccessEquipScheduled;
    private int numStudentAssessmentsReqAccessEquipScheduledIncorrect;

    private float percentCapacityUsed;

    private List<SchedulerValidationError> errors;

    public ScheduleCreationInfo() {
        errors = new ArrayList<SchedulerValidationError>();
    }

    public int getNumTimeslotsWithNoProctor() {
        return numTimeslotsWithNoProctor;
    }

    public void setNumTimeslotsWithNoProctor(int numTimeslotsWithNoProctor) {
        this.numTimeslotsWithNoProctor = numTimeslotsWithNoProctor;
    }

    public Map<String, List<String>> getStudentsNotScheduled() {
        return studentsNotScheduled;
    }

    public void setStudentsNotScheduled(Map<String, List<String>> studentsNotScheduled) {
        this.studentsNotScheduled = studentsNotScheduled;
    }

    public int getTotalNumTestSlots() {
        return totalNumTestSlots;
    }

    public void setTotalNumTestSlots(int totalNumTestSlots) {
        this.totalNumTestSlots = totalNumTestSlots;
    }

    public int getNumEmptyTestSlots() {
        return numEmptyTestSlots;
    }

    public void setNumEmptyTestSlots(int numEmptyTestSlots) {
        this.numEmptyTestSlots = numEmptyTestSlots;
    }

    public int getTotalNumSeats() {
        return totalNumSeats;
    }

    public void setTotalNumSeats(int totalNumSeats) {
        this.totalNumSeats = totalNumSeats;
    }

    public int getNumEmptySeats() {
        return numEmptySeats;
    }

    public void setNumEmptySeats(int numEmptySeats) {
        this.numEmptySeats = numEmptySeats;
    }

    public int getNumStudentsScheduled() {
        return numStudentsScheduled;
    }

    public void setNumStudentsScheduled(int numStudentsScheduled) {
        this.numStudentsScheduled = numStudentsScheduled;
    }

    public int getNumSeatsWithAccessibilityEquipment() {
        return numSeatsWithAccessibilityEquipment;
    }

    public void setNumSeatsWithAccessibilityEquipment(int numSeatsWithAccessibilityEquipment) {
        this.numSeatsWithAccessibilityEquipment = numSeatsWithAccessibilityEquipment;
    }

    public int getNumStudentAssessmentsRequiringAccessibilityEquipment() {
        return numStudentAssessmentsRequiringAccessibilityEquipment;
    }

    public void setNumStudentAssessmentsRequiringAccessibilityEquipment(
            int numStudentAssessmentsRequiringAccessibilityEquipment) {
        this.numStudentAssessmentsRequiringAccessibilityEquipment = numStudentAssessmentsRequiringAccessibilityEquipment;
    }

    public int getNumStudentAssessmentsReqAccessEquipScheduled() {
        return numStudentAssessmentsReqAccessEquipScheduled;
    }

    public void setNumStudentAssessmentsReqAccessEquipScheduled(int numStudentAssessmentsReqAccessEquipScheduled) {
        this.numStudentAssessmentsReqAccessEquipScheduled = numStudentAssessmentsReqAccessEquipScheduled;
    }

    public float getPercentCapacityUsed() {
        return percentCapacityUsed;
    }

    public void setPercentCapacityUsed(float percentCapacityUsed) {
        this.percentCapacityUsed = percentCapacityUsed;
    }

    public List<SchedulerValidationError> getErrors() {
        return errors;
    }

    public void setErrors(List<SchedulerValidationError> errors) {
        this.errors = errors;
    }

    public int getNumUnscheduledStudents() {
        return numUnscheduledStudents;
    }

    public void setNumUnscheduledStudents(int numUnscheduledStudents) {
        this.numUnscheduledStudents = numUnscheduledStudents;
    }

    public int getNumUnscheduledAssessments() {
        return numUnscheduledAssessments;
    }

    public void setNumUnscheduledAssessments(int numUnscheduledAssessments) {
        this.numUnscheduledAssessments = numUnscheduledAssessments;
    }

    public int getNumStudentAssessmentsReqAccessEquipScheduledIncorrect() {
        return numStudentAssessmentsReqAccessEquipScheduledIncorrect;
    }

    public void setNumStudentAssessmentsReqAccessEquipScheduledIncorrect(
            int numStudentAssessmentsReqAccessEquipScheduledIncorrect) {
        this.numStudentAssessmentsReqAccessEquipScheduledIncorrect = numStudentAssessmentsReqAccessEquipScheduledIncorrect;
    }

}
