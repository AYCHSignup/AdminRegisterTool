/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testadmin.domain.constraintvalidators;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.joda.time.DateTime;
import org.opentestsystem.delivery.testadmin.domain.constraints.ValidScheduleDate;
import org.opentestsystem.delivery.testadmin.domain.schedule.Schedule;

public class ScheduleDateValidator implements ConstraintValidator<ValidScheduleDate, Schedule> {

    private static final String INVALID_END_DATE_MESSAGE = "{schedule.invalid.enddate}";
    private static final String INVALID_PAST_START_DATE_MESSAGE = "{schedule.invalid.past.startdate}";
    private static final String END_DATE = "endDate";
    private static final String START_DATE = "startDate";

    @Override
    public void initialize(final ValidScheduleDate constraintAnnotation) {

    }

    @Override
    public boolean isValid(final Schedule schedule, final ConstraintValidatorContext context) {
        DateTime yesterday = new DateTime().minusDays(1);
        if (schedule.getStartDate() != null && schedule.getStartDate().isBefore(yesterday)) {
            context.disableDefaultConstraintViolation();
            context.buildConstraintViolationWithTemplate(INVALID_PAST_START_DATE_MESSAGE)
            .addPropertyNode(START_DATE)
            .addConstraintViolation();
            return false;
        }

        if (schedule.getStartDate() != null  && schedule.getEndDate() != null) {
            if (schedule.getEndDate().isBefore(schedule.getStartDate())) {
                context.disableDefaultConstraintViolation();
                context.buildConstraintViolationWithTemplate(INVALID_END_DATE_MESSAGE)
                .addPropertyNode(END_DATE)
                .addConstraintViolation();
                return false;
            }
        }

        return true;
    }

}
