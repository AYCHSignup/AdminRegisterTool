/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.domain.constraintvalidators;

import java.util.regex.Pattern;

import javax.validation.ConstraintValidatorContext;

import org.opentestsystem.delivery.testreg.domain.constraints.Numeric;

public class NumericValidator extends AbstractVetoingConstraint<Numeric> {
    
    private static final String NUMERIC_REGEX="^[\\d]*$";
    
    private static final String NUMERIC_DASH_REGEX = "^[\\d\\-]*$";
    
    private boolean isDashAllowed = false;

    @Override
    public void initialize(Numeric constraintAnnotation) {
        isDashAllowed = constraintAnnotation.isDashAllowed();
    }

    @Override
    public boolean processValidateWithVetoing(String value, ConstraintValidatorContext context) {
        /*
         * We need to check if the number is an unsigned 64bit. This is trickier to do in java.
         * So punting it for now.
         */
        if(isDashAllowed) {
            return Pattern.matches(NUMERIC_DASH_REGEX,value);
        }
        return Pattern.matches(NUMERIC_REGEX,value);
    }
}
