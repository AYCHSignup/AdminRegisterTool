/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.domain.constraintvalidators;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.opentestsystem.delivery.testreg.domain.Student;
import org.opentestsystem.delivery.testreg.domain.constraints.StudentEntryDate;

public class StudentEntryDateValidator implements ConstraintValidator<StudentEntryDate, Student> {

    private static final String ORIGIN_FIELD_FOR_VIOLATION = "firstEntryDateIntoUsSchool"; // could be any field. Doesn't matter

    @Override
    public void initialize(final StudentEntryDate constraintAnnotation) {
    }

    @Override
    public boolean isValid(final Student student, final ConstraintValidatorContext context) {

        if (student.getBirthDate() != null && student.getFirstEntryDateIntoUsSchool() != null) {
            if (student.getFirstEntryDateIntoUsSchool().getYear() > student.getBirthDate().getYear()) {
                return true;
            }
        } else {
            // If any condition null then return true
            return true;
        }

        /*
         * This validation is a sort of cross-field( @ClassLevel) validation. We need to pass a field for the
         * constraint processor to lookup an invalid value. So lets add a node to the message.
         */
        context.disableDefaultConstraintViolation();
        context.buildConstraintViolationWithTemplate(context.getDefaultConstraintMessageTemplate())
                .addPropertyNode(ORIGIN_FIELD_FOR_VIOLATION)
                .addConstraintViolation();
        return false;
    }

}
