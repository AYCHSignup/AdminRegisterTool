/*
Educational Online Test Delivery System Copyright (c) 2013 American Institutes for Research

Distributed under the AIR Open Source License, Version 1.0 See accompanying file AIR-License-1_0.txt or at
http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 */

package org.opentestsystem.delivery.testreg.domain;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.hibernate.validator.constraints.NotBlank;
import org.opentestsystem.delivery.testreg.domain.search.StudentSearchRequest;
import org.opentestsystem.shared.progman.client.domain.TenantType;
import org.opentestsystem.shared.search.domain.AbstractSearchRequest;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.annotations.XStreamOmitField;
import com.thoughtworks.xstream.converters.basic.BooleanConverter;

@SuppressWarnings({ "PMD.ShortVariable" })
@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@XmlOrderSequence({ "entityId", "entityName", "shareStudentIdentity" })
public class ClientEntity implements Sb11SuperEntity {

    private static final long serialVersionUID = 2656035573610266099L;
    private static final String GET_RESOURCE_NAME = "/client/";
    public static final FormatType FORMAT_TYPE = FormatType.CLIENT;
    public static final HierarchyLevel ENTITY_TYPE = HierarchyLevel.CLIENT;
    public static final TenantType TENANT_TYPE = TenantType.CLIENT;

    @Id
    @XStreamOmitField
    private String id;

    @NotBlank(message = "{client.entityid.blank}")
    @XStreamAlias("ClientId")
    private String entityId;

    @NotBlank(message = "{client.entityname.blank}")
    @Indexed(unique = true)
    @XStreamAlias("ClientName")
    private String entityName;

    @XStreamOmitField
    private String changeEntityTypes;

    @XStreamOmitField
    private String groupOfLevels;

    @XStreamOmitField
    private boolean groupOfStates;

    @XStreamOmitField
    private boolean groupOfDistricts;

    @XStreamOmitField
    private boolean groupOfInstitutions;

    @XStreamOmitField
    private String systemId;

    @XStreamOmitField
    private String[] sbacExportTypes;

    @XStreamOmitField
    private String[] localExportTypes;

    @XStreamOmitField
    private String timeZone;

    @XStreamConverter(value = BooleanConverter.class, booleans = { false }, strings = { "Yes", "No" })
    @XStreamAlias("ShareIdentityData")
    private boolean shareStudentIdentity;

    public String getId() {
        return id;
    }

    public void setId(final String inId) {
        this.id = inId;
    }

    public Action getAction() {
        return Action.UPD;
    }

    @Override
    public void setParentEntityType(HierarchyLevel hierarchyLevel) {}

    public HierarchyLevel getParentEntityType() {
        return null;
    }

    public String getParentEntityId() {
        return null;
    }

    public String getParentId() {
        return null;
    }

    public void setParentId(final String inParentId) {
        // Nothing to set client parent
    }

    @JsonIgnore
    public String getStateAbbreviation() {
        return null;
    }

    public String getEntityId() {
        return entityId;
    }

    public void setEntityId(final String inEntityId) {
        this.entityId = inEntityId;
    }

    public String getEntityName() {
        return entityName;
    }

    public String getChangeEntityTypes() {
        return changeEntityTypes;
    }

    public void setChangeEntityTypes(String changeEntityTypes) {
        this.changeEntityTypes = changeEntityTypes;
    }

    public String getGroupOfLevels() {
        return groupOfLevels;
    }

    public void setGroupOfLevels(String groupOfLevels) {
        this.groupOfLevels = groupOfLevels;
    }

    public String getSystemId() {
        return systemId;
    }

    public void setSystemId(String systemId) {
        this.systemId = systemId;
    }

    public String[] getSbacExportTypes() {
        return sbacExportTypes;
    }

    public void setSbacExportTypes(String[] exportTypes) {
        this.sbacExportTypes = exportTypes;
    }

    public String[] getLocalExportTypes() {
        return localExportTypes;
    }

    public void setLocalExportTypes(String[] exportTypes) {
        this.localExportTypes = exportTypes;
    }

    public String getTimeZone() {
        return timeZone;
    }

    public void setTimeZone(String timeZone) {
        this.timeZone = timeZone;
    }

    public static String getGetResourceName() {
        return GET_RESOURCE_NAME;
    }

    public void setEntityName(final String inEntityName) {
        this.entityName = inEntityName;
    }

    public boolean isGroupOfStates() {
        return groupOfStates;
    }

    public void setGroupOfStates(boolean groupOfStates) {
        this.groupOfStates = groupOfStates;
    }

    public boolean isGroupOfDistricts() {
        return groupOfDistricts;
    }

    public void setGroupOfDistricts(boolean groupOfDistricts) {
        this.groupOfDistricts = groupOfDistricts;
    }

    public boolean isGroupOfInstitutions() {
        return groupOfInstitutions;
    }

    public void setGroupOfInstitutions(boolean groupOfInstitutions) {
        this.groupOfInstitutions = groupOfInstitutions;
    }

    public boolean isShareStudentIdentity() {
        return shareStudentIdentity;
    }

    public void setShareStudentIdentity(boolean shareStudentIdentity) {
        this.shareStudentIdentity = shareStudentIdentity;
    }

    public static class Builder implements TestRegistrationBuilder<ClientEntity> {

        private final Object[] builderVals;

        public Builder(final Object... inVals) {
            this.builderVals = inVals;
        }

        public ClientEntity build() {
            ClientEntity builtObject = new ClientEntity();
            builtObject.setEntityId((String) builderVals[DomainIndexConstants.CLIENT_ENTITY_ID_INDEX]);
            builtObject.setEntityName((String) builderVals[DomainIndexConstants.CLIENT_ENTITY_NAME_INDEX]);
            builtObject.setSystemId((String) builderVals[DomainIndexConstants.CLIENT_SYSTEMID_INDEX]);
            builtObject.setShareStudentIdentity((Boolean.valueOf((String) builderVals[DomainIndexConstants.CLIENT_SHARESTUDENTIDENTITY_INDEX])));
            return builtObject;
        }
    }

    @JsonProperty
    public String getUrl() {
        return GET_RESOURCE_NAME + this.id;
    }

    @Override
    public String[] toStringArray() {
        String[] elements = new String[2];
        elements[DomainIndexConstants.CLIENT_ENTITY_ID_INDEX] = this.getEntityId();
        elements[DomainIndexConstants.CLIENT_ENTITY_NAME_INDEX] = this.getEntityName();
        return elements;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }

    @Override
    public String getAlternateKey() {
        return new StringBuilder().append("entityId: ").append(entityId).toString();
    }

    @Override
    public AbstractSearchRequest createAlternateKeySearchRequest() {
        Map<String, String[]> reqMap = new HashMap<String, String[]>();
        reqMap.put(StudentSearchRequest.SEARCH_KEY_ENTITY_ID, new String[] { entityId });
        StudentSearchRequest request = new StudentSearchRequest(reqMap);
        return request;
    }

    public boolean isEntityHidden(FormatType format) {
        if ((format == FormatType.GROUPOFSTATES && isGroupOfStates())
                || (format == FormatType.GROUPOFDISTRICTS && isGroupOfDistricts())
                || (format == FormatType.GROUPOFINSTITUTIONS && isGroupOfInstitutions())) {
            return true;
        }
        return false;
    }

    @Override
    @JsonIgnore
    public void setParentEntityId(String parentEntityId) {
        throw new UnsupportedOperationException("No parent can be set for Client");
    }

    @Override
    public FormatType getFormatType() {
        return FORMAT_TYPE;
    }

    @Override
    public HierarchyLevel getEntityType() {
        return ENTITY_TYPE;
    }

    @Override
    public TenantType getTenantType() {
        return TENANT_TYPE;
    }
}
