/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.domain.constraintvalidators;

import java.util.regex.Pattern;

import javax.validation.ConstraintValidatorContext;

import org.opentestsystem.delivery.testreg.domain.constraints.Ascii;

public class AsciiValidator extends AbstractVetoingConstraint<Ascii> {
    
    private static final String ASCII = "\\A\\p{ASCII}*\\z";
    
    private static final String HIGH_ASCII = "^[\\x00-\\xFF]*$"; //Includes ASCII & HIGH ASCII
    
    boolean includeHighAscii = false; //By default matches only against an regular ascii character set

    @Override
    public void initialize(Ascii constraintAnnotation) {
        includeHighAscii = constraintAnnotation.isExtended();
    }

    @Override
    public boolean processValidateWithVetoing(String value, ConstraintValidatorContext context) {
        if(includeHighAscii) {
            return Pattern.matches(HIGH_ASCII, value);
        }
        return Pattern.matches(ASCII,value);
    }
}
