/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/

package org.opentestsystem.delivery.testreg.domain.constraintvalidators;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import org.opentestsystem.delivery.testreg.domain.Assessment.TestWindow;
import org.opentestsystem.delivery.testreg.domain.constraints.ValidEndWindow;

public class EndWindowValidator implements ConstraintValidator<ValidEndWindow, TestWindow> {

    private static final String TEST_END_WINDOW_MESSAGE = "{testwindow.invalid.enddate}";
    private static final String TEST_END_WINDOW = "endWindow";

    @Override
    public void initialize(final ValidEndWindow constraintAnnotation) {

    }

    @Override
    public boolean isValid(final TestWindow windowObj, final ConstraintValidatorContext context) {

        if (windowObj.getBeginWindow() != null && windowObj.getEndWindow() != null) {
            if (windowObj.getEndWindow().isBefore(windowObj.getBeginWindow())) {
                context.disableDefaultConstraintViolation();
                context.buildConstraintViolationWithTemplate(TEST_END_WINDOW_MESSAGE)
                .addPropertyNode(TEST_END_WINDOW) // This constraint validates across fields but messages are specific to a node. So lets add the field name where this violation occurred
                .addConstraintViolation();
                return false;
            }
        }
        return true;
    }

}
