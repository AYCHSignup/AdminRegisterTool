/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.delivery.testreg.init;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.xml.XmlBeanDefinitionReader;
import org.springframework.context.ApplicationContextInitializer;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.support.GenericApplicationContext;
import org.springframework.core.Ordered;
import org.springframework.core.io.ClassPathResource;

/**
 * Application Context Initializer used as a hook into the Spring initialization process.
 */
public class InitSpringTestRegLoad implements ApplicationContextInitializer<ConfigurableApplicationContext>, Ordered {

    /**
     * Logger
     */
    private static final Logger LOGGER = LoggerFactory.getLogger(InitSpringTestRegLoad.class);

    /**
     * {@inheritDoc}
     */
    @Override
    public void initialize(final ConfigurableApplicationContext applicationContext) {
        if (LOGGER.isDebugEnabled()) {
            LOGGER.debug("########### initializing InitSpringTestRegLoad");
        }

        LOGGER.debug("########### loading testreg client context from xml");

        GenericApplicationContext testRegContext = new GenericApplicationContext();
        XmlBeanDefinitionReader xmlReader = new XmlBeanDefinitionReader(testRegContext);
        xmlReader.loadBeanDefinitions(new ClassPathResource("testreg-client-context.xml"));

        String[] activeProfiles = applicationContext.getEnvironment().getActiveProfiles();

        for (String profile : activeProfiles) {

            testRegContext.getEnvironment().addActiveProfile(profile);
        }

        testRegContext.refresh();

        applicationContext.setParent(testRegContext);

        LOGGER.debug("########### Context created");

    }

    /**
     * {@inheritDoc}
     * 
     * @return 3 so that test reg is loaded after progman and M&A
     */
    @Override
    public int getOrder() {

        return 3;
    }

}
